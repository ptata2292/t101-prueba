{"version":3,"sources":["./src/app/views/pages/rail/rail-order-status/rail-order-status.component.ts","./src/app/views/pages/rail/rail-order-status/rail-order-status.component.html","./src/app/views/pages/rail/rail.ts","./src/app/views/pages/rail/rail-dashboard/rail-subheader/rail-subheader.component.ts","./src/app/views/pages/rail/rail-dashboard/rail-subheader/rail-subheader.component.html","./src/app/views/pages/rail/rail-dashboard/rail-dashboard.component.ts","./src/app/views/pages/rail/rail-dashboard/rail-dashboard.component.html","./src/app/views/pages/rail/rail.component.ts","./src/app/views/pages/rail/rail.component.html","./src/app/views/pages/rail/rail-dashboard/rail-retrieve.service.ts","./src/app/views/pages/rail/rail-create-order/rail-create-order.component.ts","./src/app/views/pages/rail/rail-create-order/rail-create-order.component.html","./src/app/shared/models/rail.model.ts","./src/app/views/pages/rail/rail-orders/rail-orders.component.ts","./src/app/views/pages/rail/rail-orders/rail-orders.component.html","./src/app/views/pages/rail/rail-order.service.ts","./src/app/views/pages/rail/rail-search/rail-list/rail-item/rail-item.component.ts","./src/app/views/pages/rail/rail-search/rail-list/rail-item/rail-item.component.html","./src/app/views/pages/rail/rail-search/rail-list/rail-item/rail-item.ts","./src/app/views/pages/rail/rail-search/rail-list/rail-list.component.ts","./src/app/views/pages/rail/rail-search/rail-list/rail-list.component.html","./src/app/views/pages/rail/rail.module.ts","./src/app/views/pages/rail/rail-view/rail-view.service.ts","./src/app/views/pages/rail/rail-view/rail-view.component.ts","./src/app/views/pages/rail/rail-order/rail-order.component.ts","./src/app/views/pages/rail/rail-order/rail-order.component.html","./src/app/views/pages/rail/rail-search/rail-search.component.ts","./src/app/views/pages/rail/rail-search/rail-search.component.html"],"names":[],"mappings":"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","file":"views-pages-rail-rail-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { LoginService } from '../../auth/login/login.service';\nimport { Rail } from '../rail';\nimport { LocalStorage } from '../../../../shared/storage/local-storage';\nimport { RailOrderService } from '../rail-order.service';\n\n@Component({\n  selector: 'app-rail-order-status',\n  templateUrl: './rail-order-status.component.html',\n  styleUrls: ['./rail-order-status.component.css']\n})\nexport class RailOrderStatusComponent extends Rail implements OnInit {\n\n  public isSubmitted = false;\n  public isLoading = false;\n  public order = {\n    flightSegment: [],\n    passengerList: [],\n    contactList: []\n  };\n  public orderId;\n  public flightSegmentList = [];\n\n  displayedColumns: string[] = ['Index', 'Name', 'Gender', 'DOB'];\n\n  constructor(private router: Router, loginService: LoginService, private localStorage: LocalStorage,\n    private railOrderService: RailOrderService, private _snackBar: MatSnackBar,\n    private activatedRoute: ActivatedRoute) { \n    super(loginService);\n    document.body.style.backgroundSize = \"100% 165px\";\n    this.activatedRoute.params.subscribe(params => {\n      this.orderId = params.id;\n      //this.ngOnInit();\n    });\n  }\n\n  ngOnInit(): void {\n    if(this.orderId != null){\n      this.railOrderService.gerOrderById(this.orderId).subscribe((data: any) => {\n        // console.log('gerOrderByName');\n        // console.log(data);\n        this.isLoading = false;      \n        this.order = this.getOrderData(data, this.order);\n      });\n    }\n  }  \n}\n","<div *ngIf=\"isLoading\">\n    <mat-spinner class=\"spinner\" [diameter]=\"30\"></mat-spinner>\n</div>\n<div *ngIf=\"!isLoading && order.flightSegment.length == 0\">\n    <!--begin::Entry-->\n    <div class=\"d-flex flex-column-fluid\">\n        <!--begin::Container-->\n        <div class=\"container\">\n            <!--begin::Dashboard-->\n            <div class=\"brdSmallBlock gutter-b d-flex\">\n                <div class=\"brdSmallBlock_inner pt-2 flex-column align-items-center\">\n                    <h1 class=\"text-white\"><span class=\"opacity-70 font-weight-normal\">Ticket: </span>Failed <i class=\"fas fa-times-circle text-danger icon-xl\"></i></h1>\n                    <h6 class=\"text-white\" *ngIf=\"orderId != null\"><span class=\"opacity-70\">Order Id: </span>{{orderId}}</h6>\n                </div>\n            </div>\n            <!--begin::Details-->\n            <!-- <div class=\"gutter-b\" *ngFor=\"let flightSegment of order.flightSegment\">\n                <div class=\"separator separator-solid\"></div>\n                <table mat-table [dataSource]=\"order.passengerList\" class=\"mat-elevation-z8\">\n\n                    <ng-container matColumnDef=\"Index\">\n                    <th mat-header-cell *matHeaderCellDef> # </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.index}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"Name\">\n                    <th mat-header-cell *matHeaderCellDef> Name </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{ getName(element) }} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"Gender\">\n                        <th mat-header-cell *matHeaderCellDef> Gender </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.individual.gender}} </td>\n                    </ng-container>\n                \n                    <ng-container matColumnDef=\"DOB\">\n                    <th mat-header-cell *matHeaderCellDef> DOB </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.individual.birthdate | date:'mediumDate'}} </td>\n                    </ng-container>\n                                            \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                </table>\n            </div> -->\n            <!--end::Details-->\n            <!--end::Dashboard-->\n        </div>\n        <!--end::Container-->\n    </div>\n    <!--end::Entry-->\n</div>\n\n<!--begin::Entry-->\n<div *ngIf=\"!isLoading && orderId != null && order.flightSegment.length > 0\" class=\"d-flex flex-column-fluid\">\n    <!--begin::Container-->\n    <div class=\"container\">\n        <!--begin::Dashboard-->\n        <div class=\"brdSmallBlock gutter-b d-flex\">\n            <div class=\"brdSmallBlock_inner pt-2 flex-column align-items-center\">\n                <h1 class=\"text-white\"><span class=\"opacity-70 font-weight-normal\">Ticket: </span>Confirmed <i class=\"fas fa-check-circle text-success icon-xl\"></i></h1>\n                <h6 class=\"text-white\"><span class=\"opacity-70\">Order Id: </span>{{orderId}}</h6>\n            </div>\n        </div>\n        <!--begin::Details-->\n        <div class=\"gutter-b\" *ngFor=\"let flightSegment of order.flightSegment\">\n            <div class=\"card card-custom mb-3\">\n                <div class=\"card-body p-0\">\n                    <!--begin::Top-->\n                    <div class=\"d-flex align-items-start flex-wrap p-5\" >\n                        <div class=\"col-5 d-flex align-items-center flex-lg-fill pl-0\">\n                            <div class=\"symbol symbol-50 bg-gray-300 mr-4\">\n                                <img (error) =\"onImgError($event)\" [src]=\"getImageName(flightSegment.marketingCarrier.railID)\"alt=\"image\">\n                            </div>\n                            <div class=\"d-flex flex-column flex-wrap\">\n                                <h5 class=\"mb-1\">{{flightSegment.marketingCarrier.name}}</h5>\n                                <div class=\"d-flex\">\n                                    <span class=\"text-dark-50 font-weight-bold mr-2\"> {{flightSegment.marketingCarrier.railID +  flightSegment.marketingCarrier.flightNumber}}</span>\n                                    <span class=\"text-dark-50 font-weight-bold mr-2\">|</span>\n                                    <span class=\"text-dark-50 font-weight-bold mr-2\">{{flightSegment.equipment.name }}</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-7 d-flex align-items-center justify-content-center flex-lg-fill pl-0\">\n                            <div class=\"d-flex flex-column flex-wrap align-items-end\">\n                                <h4 class=\"mb-1\">{{flightSegment.departure.time}}</h4>\n                                <h6 class=\"opacity-70\">{{flightSegment.departure.date | date:'mediumDate'}}</h6>\n                                <!-- <span class=\"text-dark-50 font-weight-bold\"> {{ flightSegment.departure.airportName + \"(\"+flightSegment.departure.airportCode+\")\" }}</span> -->\n                                <span class=\"text-dark-50 font-weight-bold\"> {{ flightSegment.departure.airportCode }}</span>\n                            </div>\n                            <div class=\"d-flex flex-column flex-wrap align-items-center min-w-150px ml-3 mr-3\">\n                                <div class=\"hr-text font-size-sm text-dark-50 mb-1\"> {{ getDuration(flightSegment.flightDetail.flightDuration.value) }}</div>\n                                <span class=\"text-primary font-weight-bold mb-1\">{{ getStops(flightSegment.flightDetail.stops.stopQuantity) }}</span>\n                                <span class=\"text-dark-65\">{{ getClass(flightSegment.classOfService.code) }}</span>\n                            </div>\n                            <div class=\"d-flex flex-column flex-wrap\">\n                                <h4 class=\"mb-1\">{{flightSegment.arrival.time}}</h4>\n                                <h6 class=\"opacity-70\">{{flightSegment.arrival.date | date:'mediumDate'}}</h6>\n                                <!-- <span class=\"text-dark-50 font-weight-bold\">{{ flightSegment.arrival.airportName + \"(\"+flightSegment.arrival.airportCode+\")\" }}</span> -->\n                                <span class=\"text-dark-50 font-weight-bold\">{{ flightSegment.arrival.airportCode }}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <!--end::Top-->\n                    <!--begin::Separator-->\n                    <div class=\"separator separator-solid\"></div>\n                    <!--end::Separator-->\n                    <table mat-table [dataSource]=\"order.passengerList\" class=\"mat-elevation-z8\">\n\n                        <ng-container matColumnDef=\"Index\">\n                          <th mat-header-cell *matHeaderCellDef> # </th>\n                          <td mat-cell *matCellDef=\"let element\"> {{element.index}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"Name\">\n                          <th mat-header-cell *matHeaderCellDef> Name </th>\n                          <td mat-cell *matCellDef=\"let element\"> {{ getName(element) }} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"Gender\">\n                            <th mat-header-cell *matHeaderCellDef> Gender </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.individual.gender}} </td>\n                          </ng-container>\n                      \n                        <ng-container matColumnDef=\"DOB\">\n                          <th mat-header-cell *matHeaderCellDef> DOB </th>\n                          <td mat-cell *matCellDef=\"let element\"> {{element.individual.birthdate | date:'mediumDate'}} </td>\n                        </ng-container>\n                                                   \n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                    </table>\n                </div>\n            </div>\n        </div>\n        <!--end::Details-->\n        <!--end::Dashboard-->\n    </div>\n    <!--end::Container-->\n</div>\n<!--end::Entry-->\n\n","import { FormGroup } from '@angular/forms';\n\nimport { config } from '../../../shared/config';\nimport { ObjectBase } from '../../../core/object-base';\nimport { LoginService } from '../auth/login/login.service';\nimport { from } from 'rxjs';\n\nexport class Rail extends ObjectBase {\n\n  protected defaultTo =  {\n    \"id\": \"ORD\",\n    \"icao\": \"KORD\",\n    \"iata\": \"ORD\",\n    \"name\": \"ORD - Chicago OHare International Airport\",\n    \"city\": \"Chicago\",\n    \"state\": \"Illinois\",\n    \"country\": \"US\",\n    \"elevation\": 672,\n    \"lat\": 41.97859955,\n    \"lon\": -87.90480042,\n    \"tz\": \"America/Chicago\",\n    \"value\":\"ORD - Chicago OHare International Airport\",\n    \"data\":\"ORD\"\n  };\n  protected defaultFrom =   {\n    \"id\": \"DFW\",\n    \"icao\": \"KDFW\",\n    \"iata\": \"DFW\",\n    \"name\": \"DFW - Dallas Fort Worth International Airport\",\n    \"city\": \"Dallas-Fort Worth\",\n    \"state\": \"Texas\",\n    \"country\": \"US\",\n    \"elevation\": 607,\n    \"lat\": 32.89680099,\n    \"lon\": -97.03800201,\n    \"tz\": \"America/Chicago\",\n    \"value\":\"DFW - Dallas Fort Worth International Airport\",\n    \"data\":\"DFW\"\n  };\n  public numbers  = [1,2,3,4,5,6,7,8,9,10];\n  public wholeNumbers  = [0,1,2,3,4,5,6,7,8,9,10];\n\n  public countries = [\"United States\", \"Afghanistan\", \"Albania\", \"Algeria\", \"American Samoa\", \"Andorra\", \"Angola\", \"Anguilla\", \"Antarctica\", \"Antigua and Barbuda\", \"Argentina\", \"Armenia\", \"Aruba\", \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia\", \"Bonaire\", \"Bosnia and Herzegovina\", \"Botswana\", \"Bouvet Island\", \"Brazil\", \"British Indian Ocean Territory\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cambodia\", \"Cameroon\", \"Canada\", \"Cape Verde\", \"Cayman Islands\", \"Central African Republic\", \"Chad\", \"Chile\", \"China\", \"Christmas Island\", \"Cocos (Keeling) Islands\", \"Colombia\", \"Comoros\", \"Congo (Brazzaville)\", \"Congo (Kinshasa)\", \"Cook Islands\", \"Costa Rica\", \"Croatia\", \"Cuba\", \"Curacao\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"East Timor\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Eritrea\", \"Estonia\", \"Ethiopia\", \"Falkland Islands\", \"Faroe Islands\", \"Fiji\", \"Finland\", \"France\", \"French Guiana\", \"French Polynesia\", \"Gabon\", \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Gibraltar\", \"Greece\", \"Greenland\", \"Grenada\", \"Guadeloupe\", \"Guam\", \"Guatemala\", \"Guernsey\", \"Guinea\", \"Guinea-Bissau\", \"Guyana\", \"Haiti\", \"Heard and Mcdonald Islands\", \"Honduras\", \"Hong Kong\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Iraq\", \"Ireland\", \"Israel\", \"Italy\", \"Ivory Coast\", \"Jamaica\", \"Japan\", \"Jordan\", \"Kazakstan\", \"Kenya\", \"Kiribati\", \"Kosovo\", \"Kuwait\", \"Kyrgyzstan\", \"Laos\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macau\", \"Macedonia\", \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Marshall Islands\", \"Martinique\", \"Mauritania\", \"Mauritius\", \"Mayotte\", \"Mexico\", \"Micronesia\", \"Moldova\", \"Monaco\", \"Mongolia\", \"Montenegro\", \"Montserrat\", \"Morocco\", \"Mozambique\", \"Myanmar\", \"Namibia\", \"Nauru\", \"Nepal\", \"Netherlands\", \"New Caledonia\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"Niue\", \"Norfolk Island\", \"Northern Mariana Islands\", \"North Korea\", \"Norway\", \"Oman\", \"Pakistan\", \"Palau\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Pitcairn\", \"Poland\", \"Portugal\", \"Puerto Rico\", \"Qatar\", \"Reunion\", \"Romania\", \"Russia\", \"Rwanda\", \"Saint Helena\", \"Saint Kitts and Nevis\"];\n  public gender = [\"Male\", \"Female\"];\n  public paymentTypes = [\"On Hold\", \"Credit Card\"];\n  public yearArray = Array(10).fill(null).map((_, i) => new Date().getFullYear() + i);\n  public monthArray = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\n\n  constructor(loginService: LoginService) {\n    super(loginService);\n  } \n\n  public getAirPortDisplayName(suggestion) {\n    const value = suggestion.value || suggestion.name ||'';\n    const data = suggestion.data || suggestion.id ||'';\n    if(value == '' && data == '') {\n      return 'Please Select'; \n    } else {\n      const AirPortDisplayName =  value + '(' + data + ')'\n      return AirPortDisplayName;\n    }\n  }\n\n  sameToFromValidator(form: FormGroup) {\n    if((form.value.from || {}).data != null && (form.value.to || {}).data != null) {\n      const condition = form.value.from.data == form.value.to.data;\n      return condition ? { toFromMatch: true} : null;\n    }\n    return null;\n  }\n\n  sameStartEndValidator(form: FormGroup) {\n    const start = form.value.start;\n    const end = form.value.end;\n    if( start != null && end != null) {\n      const condition = new Date(start).getTime() > new Date(end).getTime();\n      return condition ? { startEndMatch: true} : null;\n    }\n    return null;\n  }\n\n  toSelected(form: FormGroup) {\n    const formGroupValue = form.value;\n    if(formGroupValue.to != '' && (formGroupValue.to.data == null && formGroupValue.to.id == null)) {\n      return { toSelected: true};\n    }\n    return null;\n  }\n\n  fromSelected(form: FormGroup) {\n    const formGroupValue = form.value;\n    if(formGroupValue.from != '' && (formGroupValue.from.data == null && formGroupValue.from.id == null)) {\n      return { fromSelected: true};\n    }\n    return null;\n  }\n  \n  displayFn(airport): string {\n    return airport && airport.data ? airport.data : (airport && airport.name ? airport.name : '');\n  }\n\n  getFare(flightFares) {\n    let fare = flightFares[0].totalPrice;\n    for(let flightFare of flightFares) {\n      if(flightFare.selectedFare == true) {\n        return flightFare.totalPrice\n      }\n      if(flightFare.totalPrice < fare){\n        fare = flightFare.totalPrice;\n      }\n    }\n    return fare;\n  }\n\n  getFares(flightFares) {\n    let amount = {\n      fareAmount : 0,  \n      baseAmount : 0,\n      facilityCharge : 0,\n      securityServiceFee : 0\n    } \n\n    amount.fareAmount = flightFares[0].totalPrice;\n    amount = this.getTaxes(flightFares[0], amount);\n    for(let flightFare of flightFares) {\n      if(flightFare.selectedFare == true) {\n        amount = this.getTaxes(flightFares[0], amount);\n        amount.fareAmount =flightFare.totalPrice\n        return amount;\n      }\n      if(flightFare.totalPrice < amount.fareAmount){\n        amount = this.getTaxes(flightFares[0], amount);\n        amount.fareAmount = flightFare.totalPrice;\n      }\n    }\n    return amount;\n  }\n\n  getTaxes(flightFare, amount){\n    amount.baseAmount = flightFare.baseAmount;\n    amount.facilityCharge = 0;\n    amount.securityServiceFee = 0;\n    for(let tax of flightFare.tax) {\n      if(tax.description == 'U.S Passenger Facility Charge') {\n        amount.facilityCharge = amount.facilityCharge +  (Number(tax.amount.text) * 0.01);\n      } else if (tax.description == 'Passenger Civil Aviation Security Service Fee') {\n        amount.securityServiceFee = amount.securityServiceFee +  (Number(tax.amount.text) * 0.01);\n      }\n    }\n    return amount;\n  }\n\n  getOrderData(data, order) {\n    if(data != null && data.response != null && data.response.dataLists != null) {\n      if(data.response.dataLists.flightSegmentList != null && data.response.dataLists.flightSegmentList.flightSegment != null) {\n        order.flightSegment = data.response.dataLists.flightSegmentList.flightSegment || [] ;\n      }\n      if(data.response.dataLists.passengerList != null && data.response.dataLists.passengerList.passenger != null) {\n        order.passengerList = data.response.dataLists.passengerList.passenger || [] ;\n        let index = 1;\n        for(let passenger of order.passengerList){\n          passenger.index = index++;\n        }\n      }\n      if(data.response.dataLists.contactList != null && data.response.dataLists.contactList.contactInformation != null \n              && data.response.dataLists.contactList.contactInformation.contactProvided!= null) {\n        order.contactList = data.response.dataLists.contactList.contactInformation.contactProvided || [] ;\n      }\n    } \n    order.OrderID =  order.OrderID || ((data.response || {}).order || {}).orderID || 'NA';\n    let travelAgencyRecipient = (((data.party || {}).recipient || {}).travelAgencyRecipient || {})\n    order.Agency =  order.Agency || (travelAgencyRecipient.agentUser || {}).agentUserID || 'NA';\n    order.AgencyId =  order.AgencyId || travelAgencyRecipient.agencyID || 'NA';\n    return order;\n  }\n\n  getDuration(flightDuration) {\n    // const flightDurationStr =  `${flightDuration.substring(2,5)} ${flightDuration.substring(5)}`;\n    const flightDurationStr = flightDuration.replace(\"PT\",\"\");\n    return flightDurationStr;\n  }\n  getStops(stops) {\n    const stopsStr =  stops == 0 ? \"Nonstop\" : `${stops} Stop(s)`;\n    return stopsStr;\n  }\n\n  getClass(code){\n    return code == 'I' ? 'Economy' : 'First Class';\n  }\n\n  getName(passenger){\n    const name =\n    (passenger.individual.nameTitle || \"\") + \" \" + \n    (passenger.individual.givenName || \"\") + \" \" + \n    (passenger.individual.middleName || \"\") + \" \" + \n    (passenger.individual.surname || \"\");\n    return name;\n  }\n\n  public getImageName(railID) {\n    let imagePath = \"assets/media/Rails/\" + railID + \".png\";\n    // console.log('railID:' + railID);\n    return imagePath;\n  }\n\n  public onImgError(event) {\n    // console.log(event);\n    event.target.src = \"assets/media/Rails/noImage2.png\";\n  }\n\n\n  getNameOnly(passenger){\n    const name =\n    (passenger.individual.givenName || \"\") + \" \" + \n    (passenger.individual.middleName || \"\") + \" \" + \n    (passenger.individual.surname || \"\");\n    return name;\n  }\n\n  public changeOrderData(orderObj) {\n    let date,airportCode;\n    if(orderObj != null && orderObj.flightSegment != null \n        && orderObj.flightSegment[0] != null && orderObj.flightSegment[0].departure != null ) {\n          date = orderObj.flightSegment[0].departure.date;\n          airportCode = orderObj.flightSegment[0].departure.airportCode;\n    }\n    let order = {\n      OrderId : orderObj.orderID|| orderObj.OrderID,\n      PassengerName : this.getNameOnly(orderObj.passengerList[0]) || 'NA',\n      Depature :  date || 'NA',\n      Airport : airportCode || 'NA',\n      Creation : orderObj.creationDate || 'NA',\n      Agency : orderObj.Agency ||(orderObj.agency||{}).name || 'NA',\n      AgencyId : orderObj.AgencyId ||((orderObj.agency||{}).agencyID||{}).text  || 'NA'\n    }\n    orderObj = {\n      ...orderObj,\n      ...order\n    }\n    return orderObj;\n  }\n}\n","import { Component, OnInit, EventEmitter, ViewChild, AfterViewInit} from '@angular/core';\nimport { trigger, style, transition, query } from '@angular/animations';\nimport { config } from '../../../../../shared/config';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { RailRetrieveService } from '../rail-retrieve.service';\nimport { slideInOutAnimation, slideUpDownAnimation } from '../../../../../animations';\nimport { LoginService } from '../../../auth/login/login.service';\nimport { Rail } from '../../rail';\nimport { DaterangepickerComponent, DaterangepickerConfig } from 'ng2-daterangepicker';\nimport * as moment from 'moment';\nimport { debounceTime, distinct, filter, switchMap, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs/internal/Observable';\n\ntype trip = 'one' | 'round';\n\n@Component({\n  selector: 'app-rail-subheader',\n  templateUrl: './rail-subheader.component.html',\n  styleUrls: ['./rail-subheader.component.css'],\n  animations: [\n    slideInOutAnimation,\n    slideUpDownAnimation\n  ]\n})\nexport class RailSubheaderComponent extends Rail implements OnInit {\n\n  public response = {};\n  public radioSelected : trip = \"one\";\n  qry = {\n    \"Flights\":[\n       {\n          \"DepartureAirportCode\":\"ORD\",\n          \"ArrivalAirportCode\":\"DFW\",\n          \"TravelDate\":\"2021-01-13T00:00:00\"\n       },\n       {\n          \"DepartureAirportCode\":\"DFW\",\n          \"ArrivalAirportCode\":\"ORD\",\n          \"TravelDate\":\"2021-01-21T00:00:00\"\n       }\n    ],\n    \"Passengers\":[\n       {\n          \"PassengerID\":\"T1\"\n       }\n    ]\n  }\n  public loadingLeavingFrom = false;\n  public loadingLeavingTo = false;\n\n  @ViewChild(DaterangepickerComponent) private picker: DaterangepickerComponent;\n  public mainInput = {\n      start: moment(),\n      end: ''\n  } as any;\n  public singleDatePicker = true;\n  public singlePicker = {\n    singleDatePicker: true,\n    showDropdowns: false,\n    opens: \"left\"\n  }\n  public singleDate: any;\n\n  public minDate = new Date();\n  public maxDate = new Date(this.minDate.getTime() +  1000 * 60 * 60 * 24 * 90);\n  \n  public filteredFromOptions: Observable<any[]>;\n  public filteredToOptions: Observable<any[]>;\n  public railSearchFormGroup = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n    from: new FormControl(),\n    to: new FormControl()\n  });\n\n  constructor(private router: Router, \n              private railRetrieveService:RailRetrieveService, loginService:LoginService,\n              private daterangepickerOptions: DaterangepickerConfig) {    \n      super(loginService);\n      this.daterangepickerOptions.settings = {\n          autoApply : true,\n          minDate: new Date(),\n          maxDate: moment().add(2, 'month'),\n          startDate : new Date(),\n          endDate :  new Date()\n      }; \n      this.singleDate = Date.now();\n      this.railSearchFormGroup.controls['start'].setValue(new Date());\n  }\n  \n  ngOnInit() {\n    this.filteredFromOptions = this.railSearchFormGroup.get('from').valueChanges\n      .pipe(\n        debounceTime(500),\n        filter((keyWord) => keyWord != null && keyWord.length >= 3),\n        switchMap((keyWord) => {\n          this.loadingLeavingFrom = true;\n          return this.railRetrieveService.searchAirport(keyWord)\n            .pipe(map((data: any) => {\n                this.loadingLeavingFrom = false;\n                return data.suggestions;\n            }));\n      }));\n    this.filteredToOptions = this.railSearchFormGroup.get('to').valueChanges\n      .pipe(\n        debounceTime(500),\n        filter((keyWord) => keyWord != null && keyWord.length >= 3),\n        switchMap((keyWord) => {\n          this.loadingLeavingTo = true;\n          return this.railRetrieveService.searchAirport(keyWord)\n            .pipe(map((data: any) => {\n                this.loadingLeavingTo = false;\n                return data.suggestions;\n            }));\n      }));\n  }\n\n  displayFn(airport): string {\n    return airport && airport.data ? airport.data : '';\n  }\n\n  serachRailService() {\n    this.railRetrieveService.searchRails(this.qry).subscribe((data: any) => {\n      this.response = data;\n    });\n  }\n\n  radioChange(event) {\n    if(event.value === 'one') {\n      this.singleDatePicker = true;\n      this.mainInput.end = '';\n      this.railSearchFormGroup.controls['end'].setValue('');\n    } else if(event.value === 'round') {\n      this.singleDatePicker = false;\n      this.mainInput.end = this.mainInput.start;\n      this.railSearchFormGroup.controls['end'].setValue(\n        this.railSearchFormGroup.get('start').value );\n    }\n  }\n  \n  enableEndDate() {\n    this.singleDatePicker = false;\n    this.radioSelected = \"round\";\n  }\n\n  public selectedDate(value: any, dateInput: any) {\n      dateInput.start = value.start;\n      if(this.singleDatePicker == true) {\n        dateInput.end = '';\n      } else {\n        dateInput.end = value.end;\n      }\n      \n  }\n\n  private singleSelect(value: any) {\n    this.singleDate = value.start;\n    this.mainInput.start = value.start;\n  }\n\n  startDateChange(event) {\n    console.log(event);\n  }\n\n  endDateChange(event) {\n    console.log(event);\n  }\n}","<div style=\"margin-left:100px; margin-top:50px;\">\r\n  <mat-radio-group aria-label=\"Select an option\" [(ngModel)]=\"radioSelected\">\r\n    <mat-radio-button  (change)=\"radioChange($event)\" value=\"one\">One Way</mat-radio-button>\r\n    <mat-radio-button  (change)=\"radioChange($event)\" value=\"round\">Round Trip</mat-radio-button>\r\n  </mat-radio-group>\r\n\r\n  <form class=\"example-form\">\r\n    <div class=\"row\">\r\n      <div class=\"col-2\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>Leaving To</mat-label>\r\n          <input type=\"text\" matInput [formControl]=\"railSearchFormGroup.get('to')\" [matAutocomplete]=\"autoTo\">\r\n          <mat-autocomplete #autoTo=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n            <mat-option *ngFor=\"let option of filteredToOptions | async\" [value]=\"option\">\r\n              {{ option.value + '-' + option.data }}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n        </mat-form-field>\r\n        <mat-spinner *ngIf=\"loadingLeavingTo\" [diameter]=\"15\"></mat-spinner>\r\n      </div>\r\n      <div class=\"col-2\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>Leaving From</mat-label>\r\n          <input type=\"text\" matInput [formControl]=\"railSearchFormGroup.get('from')\" [matAutocomplete]=\"autoFrom\">\r\n          <mat-autocomplete #autoFrom=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n            <mat-option *ngFor=\"let option of filteredFromOptions | async\" [value]=\"option\">\r\n              {{ option.value + '-' + option.data }}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n        </mat-form-field>\r\n        <div>{{filteredFromOptions | async | json}}</div>\r\n        <mat-spinner *ngIf=\"loadingLeavingFrom\" [diameter]=\"15\"></mat-spinner>\r\n      </div>\r\n    </div>\r\n  </form>\r\n  \r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Enter a date range</mat-label>\r\n    <mat-date-range-input [formGroup]=\"railSearchFormGroup\" [min]=\"minDate\" [max]=\"maxDate\" [rangePicker]=\"picker\">\r\n      <input matStartDate (dateChange)=\"startDateChange($event)\" formControlName=\"start\" placeholder=\"Start date\">\r\n      <input matEndDate (dateChange)=\"endDateChange($event)\" formControlName=\"end\" placeholder=\"End date\">\r\n    </mat-date-range-input>\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n    <mat-date-range-picker #picker></mat-date-range-picker>\r\n    <mat-error *ngIf=\"railSearchFormGroup.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\r\n    <mat-error *ngIf=\"railSearchFormGroup.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\r\n  </mat-form-field>\r\n  \r\n  <div class=\"form-group row\">\r\n      <div *ngIf=\"singleDatePicker\" class=\"input-group col-4\" daterangepicker\r\n               [options]=\"singlePicker\" (selected)=\"singleSelect($event)\">\r\n          <span class=\"form-control uneditable-input\"  name=\"daterange\" >\r\n            {{ singleDate | date:'M/dd/y' }}\r\n          </span>\r\n          <span class=\"input-group-btn\">\r\n            <a type=\"button\" class=\"btn btn-default\">\r\n              <i class=\"material-icons\">calendar_today</i>\r\n            </a>\r\n          </span>\r\n      </div>    \r\n      <div *ngIf=\"!singleDatePicker\"  class=\"input-group col-4\" daterangepicker \r\n            (selected)=\"selectedDate($event, mainInput)\">\r\n        <span class=\"form-control uneditable-input\"  name=\"daterange\">\r\n          {{ mainInput.start | date:'M/dd/y' }}\r\n        </span>\r\n        <span class=\"input-group-btn\">\r\n          <a type=\"button\" class=\"btn btn-default\">\r\n            <i class=\"material-icons\">calendar_today</i>\r\n          </a>\r\n        </span>\r\n      </div>\r\n      <div class=\"input-group col-4\" daterangepicker \r\n            (click)=\"enableEndDate()\" (selected)=\"selectedDate($event, mainInput)\">\r\n        <span class=\"form-control uneditable-input\"  name=\"daterange\">\r\n           {{ mainInput.end != '' ? ( mainInput.end | date:'M/dd/y' ) : 'Tap to add a return date' }}\r\n        </span>\r\n        <span class=\"input-group-btn\">\r\n          <a type=\"button\" class=\"btn btn-default\">\r\n              <i class=\"material-icons\">calendar_today</i>\r\n          </a>\r\n        </span>\r\n      </div>\r\n  </div>  \r\n  <div *ngIf=\"radioSelected=='one'\">\r\n  </div>\r\n  <div *ngIf=\"radioSelected=='round'\">\r\n  </div>\r\n  \r\n  <p>Selected range: {{railSearchFormGroup.value | json}}</p>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit, ViewChild, OnDestroy, Renderer2, ElementRef, ViewChildren } from '@angular/core';\nimport { FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { debounceTime, distinct, filter, map, switchMap } from 'rxjs/operators';\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { of } from 'rxjs';\nimport { HttpClient  } from '@angular/common/http';\nimport { Store } from '@ngxs/store';\nimport { Router } from '@angular/router';\n\nimport { environment } from '../../../../../environments/environment';\nimport { RailRetrieveService } from './rail-retrieve.service';\nimport { Rail } from '../rail';\nimport { LoginService } from '../../auth/login/login.service';\nimport { SetSearchCriteriaData } from '../../../../store/rail/rail.actions';\nimport { MyErrorStateMatcher, trip } from '../../../../shared/models/rail.model';\n\n@Component({\n  selector: 'app-rail-dashboard',\n  templateUrl: './rail-dashboard.component.html',\n  styleUrls: ['./rail-dashboard.component.css']\n})\nexport class RailDashboardComponent extends Rail implements OnInit, OnDestroy {\n  public response = {};\n  public railData = {};\n  public railLoading = false;\n  public radioSelected : trip = \"one\";\n  public loadingLeavingFrom = false;\n  public loadingLeavingTo = false;\n\n  public minToDate = new Date();\n  public maxToDate = new Date(this.minToDate.getTime() +  1000 * 60 * 60 * 24 * 150);\n  public minFromDate = new Date();\n  public maxFromDate = new Date(this.minFromDate.getTime() +  1000 * 60 * 60 * 24 * 150);\n  \n  public filteredFromOptions: Observable<any[]>;\n  public filteredToOptions: Observable<any[]>;\n  errorMatcher = new MyErrorStateMatcher();\n\n  public searchFormGroup = new FormGroup({   \n    from: new FormControl('', Validators.required),\n    to: new FormControl('', Validators.required),\n    start: new FormControl(new Date(), Validators.required),\n    end: new FormControl('', Validators.required),\n    count: new FormControl(1, Validators.required),\n    adults: new FormControl(1, Validators.required),\n    childrens: new FormControl(0, Validators.required),\n    infants: new FormControl(0, Validators.required)\n  }, {\n    validators: [ this.sameToFromValidator, this.sameStartEndValidator, this.toSelected, this.fromSelected]\n  });\n  \n  public query = {};\n  public airPortList = [];\n  @ViewChild('picker1') private picker1;\n  @ViewChild('picker2') private picker2;\n  @ViewChild('travellersSelect') travellersSelect;\n  \n  @ViewChild('fromDiv', { read: ElementRef, static: false }) fromDiv: ElementRef;\n  @ViewChild('toDiv', { read: ElementRef, static: false }) toDiv: ElementRef;\n  @ViewChild('countPopupDiv', { read: ElementRef, static: false }) countPopupDiv: ElementRef;\n  @ViewChild('travellersDiv', { read: ElementRef, static: false }) travellersDiv: ElementRef;\n  @ViewChildren('fromInput') fromInput;\n  @ViewChildren('toInput') toInput;\n  \n  public click = {\n    to: true,\n    from: true,\n    start: true,\n    end: true,\n    count: true\n  }\n  \n  private docClickSubscription: any;\n  public isLoading = false;\n  public isSubmitted = false;\n  constructor(loginService: LoginService, private railRetrieveService: RailRetrieveService, \n    private renderer: Renderer2, private store: Store, private router: Router) {    \n    super(loginService);  \n    // this.searchFormGroup.get('from').disable();\n    this.searchFormGroup.get('end').disable();\n  }\n  \n  ngOnInit() {\n    this.getAllAirportSearchService();\n    this.docClickSubscription = this.renderer.listen('document', 'click', this.onDocumentClick.bind(this));\n    this.filteredToOptions = this.searchFormGroup.get('to').valueChanges\n      .pipe(\n        debounceTime(500),\n        switchMap((railCode) => {\n          if(this.filter(railCode)){\n            return of([]);\n          } else {\n            this.loadingLeavingTo = true;\n            return this.serachAirportSearchService(railCode);\n          }\n      }));\n    this.filteredFromOptions = this.searchFormGroup.get('from').valueChanges\n      .pipe(\n        debounceTime(500),\n        switchMap((railCode) => {\n          if(this.filter(railCode)){\n            return of([]);\n          } else {\n            this.loadingLeavingFrom = true;\n            return this.serachAirportSearchService(railCode);\n          }\n      })); \n    /* this.filteredToOptions = this.searchFormGroup.get('to').valueChanges\n      .pipe(\n        switchMap((railCode) => {\n          if(railCode == '' || railCode == null ) {\n            return of(this.airPortList);\n          } else {\n            this.loadingLeavingTo = true;\n            return this.serachOfflineAirportSearch(railCode);\n          }\n      }));\n    this.filteredFromOptions = this.searchFormGroup.get('from').valueChanges\n      .pipe(\n        switchMap((railCode) => {\n          if(railCode == '' || railCode == null ) {\n            return of(this.airPortList);\n          } else {\n            this.loadingLeavingFrom = true;\n            return this.serachOfflineAirportSearch(railCode);\n          }\n      })); */\n       \n    this.searchFormGroup.get('start').valueChanges.subscribe(val => {\n      this.minFromDate = val;\n    });\n    this.searchFormGroup.get('end').valueChanges.subscribe(val => {\n    });\n  }\n\n  public ngOnDestroy(): void {\n    this.docClickSubscription();\n  }\n\n  private onDocumentClick(event: any): void {\n     // console.log(event.target.className);\n     if (event.target.className.indexOf(\"mat-calendar-body-cell-content\") != -1) {\n      // console.log(\"mat-calendar clicks\");\n      this.startDateChange(null, null);   \n      this.endDateChange(null, null); \n    } else if (event.target.className.indexOf(\"mat-option-text\") != -1) {\n      // console.log(\"mat-option clicks\");\n      // has to uncomment after travel popup \n      this.countChange(null);   \n    } else if(event.target.className.indexOf(\"cdk-overlay-backdrop\") != -1) {\n      // console.log(\"overlay clicks\");\n      this.startDateChange(null, null);   \n      this.endDateChange(null, null); \n      // has to uncomment after travel popup\n      this.countChange(null); \n    } else if(event.target.id == \"fromCity\"\n              || event.target.id == \"fromCityDiv\"\n              || this.fromDiv.nativeElement.contains(event.target)) {\n      // console.log(\"search_inputField from clicks\");\n      let json = this.searchFormGroup.value;\n      const fromValue = json.from;\n      json.from = '';\n      this.searchFormGroup.patchValue(json);\n      json.from = fromValue;\n      this.searchFormGroup.patchValue(json);   \n      this.fromInput.first.nativeElement.focus();\n      this.toChange(null);\n    } else if(event.target.id == \"toCity\"\n              || event.target.id == \"toCityDiv\"\n              || this.toDiv.nativeElement.contains(event.target)) {\n      // console.log(\"search_inputField to clicks\");\n      let json = this.searchFormGroup.value;\n      const toValue = json.to;\n      json.to = '';\n      this.searchFormGroup.patchValue(json);\n      json.to = toValue;\n      this.searchFormGroup.patchValue(json);  \n      this.toInput.first.nativeElement.focus();  \n      this.fromChange(null);   \n    } /* else if (event.target.className.indexOf(\"mat-option-text dismiss\") == -1) {\n      // console.log(\"mat-option-text dismiss clicks\");\n      this.fromChange(null);    \n      this.toChange(null);\n    } */ else if(!this.fromDiv.nativeElement.contains(event.target) || !this.toDiv.nativeElement.contains(event.target)) {\n      if(!this.fromDiv.nativeElement.contains(event.target)) {\n        // console.log(\"outside fromDiv\");\n        this.fromChange(null);    \n      } \n      if(!this.toDiv.nativeElement.contains(event.target)) {\n        // console.log(\"outside toDiv\");\n        this.toChange(null);\n      }   \n    } \n    \n    // has to uncomment after travel popup\n    /*if(this.countPopupDiv != null && (this.countPopupDiv.nativeElement.contains(event.target)\n       || event.target.className.indexOf(\"mat-option-text\") != -1) \n       || event.target.className.indexOf(\"search_inputField h2 count\") != -1\n       || event.target.className.indexOf(\"display6 count\") != -1\n       || this.travellersDiv.nativeElement.contains(event.target)) {\n      // console.log(\"inside countPopupDiv\");\n    } else {\n      // console.log(\"outside countPopupDiv\");\n      this.countChange(null);\n    }*/\n  }\n\n  changeEvents() {\n    console.log(\"changeEvents\");\n    this.startDateChange(null, null);   \n    this.endDateChange(null, null);      \n    this.fromChange(null);    \n    this.toChange(null);\n    this.countChange(null);\n  }\n\n  clickChange(objType) {\n    this.click[objType] = false;\n    if(objType == 'start') {\n      this.openStart();\n    } else if(objType == 'end') {\n      this.openEnd();\n    } else if(objType == 'count') {  \n      // has to uncomment after travel popup  \n      this.openTravellers();\n    } \n  }\n\n  openTravellers(){\n    let self = this;\n       setTimeout(\n           ()=>{                \n               self.travellersSelect.open();\n           },\n           50\n       );\n  }\n\n  openStart(){\n    let self = this;\n       setTimeout(\n           ()=>{                \n               self.picker1.open();\n           },\n           50\n       );\n  }\n\n  openEnd(){\n    let self = this;\n       setTimeout(\n           ()=>{                \n               self.picker2.open();\n           },\n           50\n       );\n  }\n\n  startDateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n    if(!this.searchFormGroup.get('start').hasError('required')){\n      this.click.start = true;\n    }\n  }\n\n  endDateChange(type: string, event: MatDatepickerInputEvent<Date>) {   \n    if(!this.searchFormGroup.get('end').hasError('required')\n        && !this.searchFormGroup.hasError('startEndMatch')){\n      this.click.end = true;\n    }\n  }\n\n  fromChange($event) {\n    if(!this.searchFormGroup.get('from').hasError('required')){\n      this.click.from = true;\n    }\n  }\n\n  toChange($event) {\n    if(!this.searchFormGroup.get('to').hasError('required') &&\n      !this.searchFormGroup.get('to').hasError('toFromMatch')){\n      this.click.to = true;\n    }\n  }\n\n  countChange($event) {\n    // has to uncomment after travel popup\n    if(!this.searchFormGroup.get('count').hasError('required')){\n      this.click.count = true;\n    }\n    /*let json = this.searchFormGroup.value;\n    json.count = json.adults + json.childrens + json.infants;\n    this.searchFormGroup.patchValue(json);\n    this.click.count = true;*/\n  }\n\n  swipBtn() {\n    let json = this.searchFormGroup.value;\n    const fromValue = json.from;\n    json.from = json.to;\n    json.to = fromValue;\n    this.searchFormGroup.patchValue(json);\n  }\n\n  serachAirportSearchService(railCode) {\n    const code = railCode.data != null ? railCode.data : railCode;\n    return this.railRetrieveService.searchAirport(code)\n            .pipe(map((data: any) => {\n                this.loadingLeavingTo = false;\n                this.loadingLeavingFrom = false;\n                return data.suggestions;\n            }));\n  }\n\n  serachOfflineAirportSearch(railCode) {\n    let suggestions = [];\n    if(this.airPortList.length == 0){\n      const code = railCode.data != null ? railCode.data : railCode;\n      return this.railRetrieveService.searchAirport(code)\n            .pipe(map((data: any) => {\n                this.loadingLeavingTo = false;\n                this.loadingLeavingFrom = false;\n                return data.suggestions;\n            }));\n    } else {\n      this.loadingLeavingTo = false;\n      this.loadingLeavingFrom = false;\n      const filterAirports = this.filterAirport(railCode);\n      return of(filterAirports);\n    }    \n  }\n\n  filterAirport(railCode) {\n    let suggestions = [];\n    let airPortCode = railCode.name || railCode.value;\n    airPortCode = airPortCode == null ? railCode : airPortCode;\n    for(const airPort of this.airPortList) {\n      if( airPort.name.toLowerCase().indexOf(airPortCode.toLowerCase()) === 0\n            || airPort.id.toLowerCase().includes(airPortCode.toLowerCase())) {\n        suggestions.push(airPort);\n      }\n    }\n    return suggestions;\n  }\n\n  getAllAirportSearchService() {\n    this.railRetrieveService.getAllAirport().\n      subscribe((data: any) => {\n        this.airPortList = data;\n        this.isLoading = false;\n      });\n  }\n\n  serachRailsService() {\n      this.railLoading = true;\n      this.railRetrieveService.searchRails(this.getSearchQuery()).\n          subscribe((data: any) => {\n            this.railData = data;\n            this.railLoading = false;\n          });\n  }\n\n  filter(railCode) {\n    if(railCode == '' || railCode == null ){\n      return true;\n    } else if(railCode.data != null){\n      return false;\n    } else if (railCode.length >= 1){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  radioChange(event) {\n    const value = event.value || event;\n    if(value === 'one') {\n      // this.searchFormGroup.get('from').disable();\n      this.searchFormGroup.get('end').disable();\n      this.searchFormGroup.controls['end'].setValue('');\n      this.click.end = true;\n    } else if(value === 'round') {\n      // this.searchFormGroup.get('from').enable();\n      this.searchFormGroup.get('end').enable();\n      if(this.searchFormGroup.get('end').value == '') {\n        this.searchFormGroup.controls['end'].setValue(this.searchFormGroup.get('start').value);\n      }\n    }\n  }\n  \n  enableRoundTrip() {\n    this.radioSelected = \"round\";\n    this.radioChange(\"round\");\n    this.click.end = false;\n    this.openEnd();\n  }\n\n  toggleTrip() {\n    this.radioSelected = this.radioSelected == \"round\"  ? \"one\" : \"round\";\n    this.radioChange(this.radioSelected);\n  }\n\n  getSearchQuery() {\n    let qry = {\n      Flights:[        \n      ],\n      Passengers:[    \n        {\n          PassengerID: \"T1\"\n        }\n      ]   \n    }\n    const formGroupValue = this.searchFormGroup.value;\n    const toAirPortCode = formGroupValue.to.data || formGroupValue.to.id || formGroupValue.to;\n    const fromAirPortCode = formGroupValue.from.data || formGroupValue.from.id|| formGroupValue.from;\n    qry.Flights.push({\n      \"DepartureAirportCode\": toAirPortCode,\n      \"ArrivalAirportCode\": fromAirPortCode,\n      \"TravelDate\": this.truncateTime(formGroupValue.start)      \n    });\n    if(this.radioSelected == 'round'){\n      qry.Flights.push({\n        \"DepartureAirportCode\": fromAirPortCode,\n        \"ArrivalAirportCode\": toAirPortCode,\n        \"TravelDate\": this.truncateTime(formGroupValue.end)\n      });\n    }\n    this.query = qry;\n    return qry;\n  }\n\n  truncateTime(time){\n    const timeStr = time.toISOString()\n    return timeStr.substring(0, timeStr.lastIndexOf('T')) + 'T00:00:00';\n  }\n  \n  serach(){\n    if(this.searchFormGroup.valid) {\n      // this.serachRailsService();\n      let searchFormGroupValue = this.searchFormGroup.value;\n      searchFormGroupValue.trip = this.radioSelected;\n      this.store.dispatch(new SetSearchCriteriaData(searchFormGroupValue));\n      this.router.navigateByUrl('/Rail/Search');\n    } else {\n      this.searchFormGroup.markAllAsTouched();\n      this.isSubmitted = true;\n    }\n  }\n}\n","<div *ngIf=\"isLoading\" class=\"spinnerBg\">\r\n  <mat-spinner class=\"spinner\" [diameter]=\"30\"></mat-spinner>\r\n</div>\r\n<div *ngIf=\"!isLoading\" class=\"d-flex flex-column-fluid\">\r\n  <!--begin::Container-->\r\n  <div class=\"container\">\r\n    <!--begin::Dashboard-->\r\n    <!--begin::Row-->\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <!--begin::Tiles Widget 1-->\r\n        <div class=\"card card-custom gutter-b card-stretch rounded-xl\">\r\n          <!--begin::Header-->\r\n          <div class=\"card-header border-0\">\r\n            <div class=\"card-toolbar\">\r\n              <ul class=\"nav nav-bold nav-pills\">\r\n                <li class=\"nav-item\" (click)=\"toggleTrip()\">\r\n                  <a class=\"nav-link\" [ngClass]=\"radioSelected == 'one' ? 'rounded-pill colorBg active' : 'nav-pills'\">One Way</a>\r\n                </li>\r\n                <li class=\"nav-item\" (click)=\"toggleTrip()\">\r\n                  <a class=\"nav-link\" [ngClass]=\"radioSelected == 'round' ? 'rounded-pill colorBg active' : 'nav-pills'\">Round Trip</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <!--end::Header-->\r\n          <!--begin::Body-->\r\n          <form #searchForm class=\"card-body pt-0 pl-6 pr-6\">\r\n            <div class=\"tab-content\">\r\n              <div class=\"tab-pane fade active show\" id=\"lr_tab_pane_1\" role=\"tabpanel\">\r\n                <div class=\"brdBigBlock\">\r\n                  <div class=\"brdBigBlock_inner\">\r\n                    <div #fromDiv id=\"fromCityDiv\" (click)=\"clickChange('from')\" class=\"searchCity\" style=\"width: 26%;\">\r\n                      <div class=\"searchContent\">\r\n                        <span class=\"search_lbl text-dark-50 pb-2\">Leaving From</span>\r\n                        <input (click)=\"clickChange('from')\" *ngIf=\"click.from\" id=\"fromCity\" type=\"text\" class=\"search_inputField h1 text-truncate from\" readonly=\"\" value=\"{{ getAirPortDisplayName(searchFormGroup.value.from) }}\" title=\"{{ getAirPortDisplayName(searchFormGroup.value.from) }}\">\r\n                        <!-- <div class=\"form-group lessMlr-1\">\r\n                          <input type=\"text\" class=\"form-control\" placeholder=\"Place\">\r\n                        </div> -->\r\n                        <div class=\"lessMlr-1\" *ngIf=\"!click.from\">\r\n                          <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <!-- <mat-label>Leaving From</mat-label> -->\r\n                            <input #fromInput type=\"text\" matInput [formControl]=\"searchFormGroup.get('from')\" [matAutocomplete]=\"autoFrom\"\r\n                              [errorStateMatcher]=\"errorMatcher\">\r\n                            <mat-autocomplete (optionSelected)=\"fromChange($event)\" #autoFrom=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n                              <mat-option *ngFor=\"let option of filteredFromOptions | async\" \r\n                                  [value]=\"option\">\r\n                                {{ (option.value || option.name) + '-' + (option.data || option.id || '') }}\r\n                              </mat-option>\r\n                            </mat-autocomplete>                           \r\n                          </mat-form-field>\r\n                        </div> \r\n                        <mat-error *ngIf=\"isSubmitted && searchFormGroup.get('from').hasError('required')\">\r\n                          Leaving From is <strong>required</strong>\r\n                        </mat-error> \r\n                        <mat-error *ngIf=\"isSubmitted && searchFormGroup.hasError('fromSelected')\">Please Select From</mat-error>                         \r\n                      </div>\r\n                    </div>\r\n                    <span class=\"swipBtn\" (click)=\"swipBtn()\">\r\n                      <i class=\"fas fa-exchange-alt text-primary\"></i>\r\n                    </span>\r\n                    <div #toDiv id=\"toCityDiv\" (click)=\"clickChange('to')\" class=\"searchCity\">\r\n                      <div class=\"searchContent\">\r\n                        <span class=\"search_lbl text-dark-50 pb-2 to\">Going To</span>\r\n                        <input (click)=\"clickChange('to')\" *ngIf=\"click.to\" id=\"toCity\" type=\"text\" class=\"search_inputField h1 text-truncate to\" readonly=\"\"  value=\"{{ getAirPortDisplayName(searchFormGroup.value.to) }}\" title=\"{{ getAirPortDisplayName(searchFormGroup.value.to) }}\">\r\n                        <!-- <div class=\"form-group lessMlr-1\">\r\n                          <input type=\"text\" class=\"form-control\" placeholder=\"Place\">\r\n                        </div> -->\r\n                        <div class=\"lessMlr-1\" *ngIf=\"!click.to\">\r\n                          <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <!-- <mat-label>Going To</mat-label> -->\r\n                            <input #toInput type=\"text\" matInput [formControl]=\"searchFormGroup.get('to')\" [matAutocomplete]=\"autoTo\"\r\n                              [errorStateMatcher]=\"errorMatcher\">\r\n                            <mat-autocomplete (optionSelected)=\"toChange($event)\"  #autoTo=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n                              <mat-option *ngFor=\"let option of filteredToOptions | async\" \r\n                                [value]=\"option\">\r\n                                {{ (option.value || option.name) + '-' + (option.data || option.id || '') }}\r\n                              </mat-option>\r\n                            </mat-autocomplete>                            \r\n                          </mat-form-field>\r\n                        </div> \r\n                        <mat-error *ngIf=\"isSubmitted && searchFormGroup.get('to').hasError('required')\">\r\n                          Going To is <strong>required</strong>\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"isSubmitted && searchFormGroup.hasError('toSelected')\">Please Select To</mat-error>\r\n                        <mat-error *ngIf=\"isSubmitted && searchFormGroup.hasError('toFromMatch')\">To and From are Same</mat-error>\r\n                      </div>\r\n                    </div>\r\n                    <div (click)=\"clickChange('start')\" class=\"searchDate\">\r\n                      <div id=\"startDate\" class=\"searchContent\">\r\n                        <span class=\"search_lbl text-dark-50 pb-2 from\">Depature <i\r\n                            class=\"far fa-calendar-alt text-primary\"></i></span>\r\n                        <div (click)=\"clickChange('start')\" *ngIf=\"click.start\" class=\"search_inputField h1\">\r\n                          {{ searchFormGroup.value.start | date: 'dd'}} \r\n                          <span class=\"search_inputField display6\">{{ searchFormGroup.value.start | date: 'MMM'}}  {{ searchFormGroup.value.start | date: 'yyyy'}} </span>\r\n                        </div>\r\n                        <!-- <div class=\"form-group lessMlr-1\">\r\n                          <input type=\"text\" class=\"form-control\" placeholder=\"Place\">\r\n                        </div> -->\r\n                        <div class=\"lessMlr-1\" *ngIf=\"!click.start\">\r\n                          <mat-form-field class=\"w-100\" appearance=\"outline\">\r\n                            <!-- <mat-label>Depature</mat-label> -->\r\n                            <input matInput [min]=\"minToDate\" [max]=\"maxToDate\" \r\n                              (click)=\"picker1.open()\" [errorStateMatcher]=\"errorMatcher\"\r\n                              [matDatepicker]=\"picker1\" [formControl]=\"searchFormGroup.get('start')\"\r\n                              (dateChange)=\"startDateChange('change', $event)\">\r\n                            <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                            <mat-datepicker #picker1></mat-datepicker>                \r\n                          </mat-form-field>\r\n                        </div>\r\n                        <mat-error *ngIf=\"isSubmitted && searchFormGroup.get('start').hasError('required')\">\r\n                          Depature Date is <strong>required</strong>\r\n                        </mat-error>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"searchDate\" (click)=\"enableRoundTrip()\" [ngClass]=\"radioSelected == 'one' ? 'bg-gray-200' : ''\">\r\n                      <div id=\"endDate\" class=\"searchContent\">\r\n                        <span class=\"search_lbl text-dark-50 pb-2\">Return <i\r\n                            class=\"far fa-calendar-alt text-primary\"></i></span>\r\n                        <input (click)=\"clickChange('end')\" *ngIf=\"click.end && this.radioSelected == 'one'\" \r\n                          type=\"text\" class=\"search_inputField h2 text-dark-50\" \r\n                          readonly=\"\" value=\"One Way\">\r\n                        <div (click)=\"clickChange('end')\" *ngIf=\"click.end && this.radioSelected == 'round'\" \r\n                          class=\"search_inputField h1\">\r\n                          {{ searchFormGroup.value.end | date: 'dd'}} \r\n                          <span class=\"search_inputField display6\">{{ searchFormGroup.value.end | date: 'MMM'}}  {{ searchFormGroup.value.end | date: 'yyyy'}} </span>\r\n                        </div>\r\n                        <!-- <div class=\"form-group lessMlr-1\">\r\n                          <input type=\"text\" class=\"form-control\" placeholder=\"Place\">\r\n                        </div> -->\r\n                        <div class=\"lessMlr-1\" *ngIf=\"!click.end\">\r\n                          <mat-form-field class=\"w-100\" appearance=\"outline\" (click)=\"enableRoundTrip()\">\r\n                            <!-- <mat-label>From</mat-label> -->\r\n                            <input matInput [min]=\"minFromDate\" [max]=\"maxFromDate\" \r\n                              (click)=\"picker2.open()\" [errorStateMatcher]=\"errorMatcher\"\r\n                              [matDatepicker]=\"picker2\" [formControl]=\"searchFormGroup.get('end')\"\r\n                              (dateChange)=\"endDateChange('change', $event)\">\r\n                            <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                            <mat-datepicker #picker2></mat-datepicker>\r\n                            <!-- <mat-error *ngIf=\"isSubmitted && searchFormGroup.hasError('startEndMatch')\">Return date cannot be earlier than Depature date\r\n                            </mat-error> -->\r\n                          </mat-form-field>\r\n                        </div>\r\n                        <mat-error *ngIf=\"isSubmitted && searchFormGroup.get('end').hasError('required')\">\r\n                          Return Date is <strong>required</strong>\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"isSubmitted && searchFormGroup.hasError('startEndMatch')\">Return date cannot be earlier than Depature date\r\n                        </mat-error>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <div #travellersDiv (click)=\"clickChange('count')\" class=\"searchContent\">\r\n                        <span class=\"search_lbl text-dark-50 pb-2\">Travellers <i\r\n                            class=\"fas fa-angle-down text-primary\"></i></span>\r\n                        <div *ngIf=\"click.count\" id=\"count\" class=\"search_inputField h2 count\">{{searchFormGroup.value.count}} <span class=\"display6 count\">Traveller</span></div>\r\n                        <!--Begin Traveller::Count-->\r\n                        <!-- <div #countPopupDiv *ngIf=\"!click.count\" class=\"card card-custom popoverCustom1 w-auto\">\r\n                          <div class=\"card-body p-5\">\r\n                            <div class=\"d-flex align-items-center justify-content-between p-4 flex-lg-wrap flex-xl-nowrap\">\r\n                              <div class=\"d-flex flex-row\">\r\n                                <div class=\"form-group mb-0 mr-3\">\r\n                                  <label class=\"font-size-h5 mb-0\">Adults</label>\r\n                                  <p class=\"font-size-sm text-dark-50 mb-1\">&nbsp;</p>\r\n                                  <mat-form-field class=\"w-100\" appearance=\"outline\">\r\n                                    <mat-select #travellersSelect [formControl]=\"searchFormGroup.get('adults')\">\r\n                                      <mat-option *ngFor=\"let number of numbers\" [value]=\"number\">\r\n                                        {{number}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"isSubmitted && searchFormGroup.get('adults').hasError('required')\">Please choose a number</mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                                <div class=\"form-group mb-0 mr-3\">\r\n                                  <label class=\"font-size-h5 mb-0\">Childrens</label>\r\n                                  <p class=\"font-size-sm text-dark-50 mb-1\">Between (2y - 17y)</p>\r\n                                  <mat-form-field class=\"w-100\" appearance=\"outline\">\r\n                                    <mat-select #travellersSelect [formControl]=\"searchFormGroup.get('childrens')\">\r\n                                      <mat-option *ngFor=\"let number of wholeNumbers\" [value]=\"number\">\r\n                                        {{number}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"isSubmitted && searchFormGroup.get('childrens').hasError('required')\">Please choose a number</mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                                <div class=\"form-group mb-0 mr-3\">\r\n                                  <label class=\"font-size-h5 mb-0\">Infants</label>\r\n                                  <p class=\"font-size-sm text-dark-50 mb-1\">Below (2y)</p>\r\n                                  <mat-form-field class=\"w-100\" appearance=\"outline\">\r\n                                    <mat-select #travellersSelect [formControl]=\"searchFormGroup.get('infants')\">\r\n                                      <mat-option *ngFor=\"let number of wholeNumbers\" [value]=\"number\">\r\n                                        {{number}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"isSubmitted && searchFormGroup.get('infants').hasError('required')\">Please choose a number</mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"card-footer bg-dark-o-40 p-5\">\r\n                            <div class=\"d-flex justify-content-end\">\r\n                              <button (click)=\"countChange(null)\" type=\"button\" class=\"btn btn-primary btn-pill mr-3\">Apply</button>\r\n                            </div>\r\n                          </div>\r\n                        </div> -->\r\n                        <!--End Traveller::Count-->\r\n                        <div class=\"lessMlr-1\" *ngIf=\"!click.count\">\r\n                          <mat-form-field class=\"w-100\" appearance=\"outline\">\r\n                            <mat-select #travellersSelect (selectionChange)=\"countChange($event.value)\" [formControl]=\"searchFormGroup.get('count')\">\r\n                              <mat-option *ngFor=\"let number of numbers\" [value]=\"number\">\r\n                                {{number}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n                        </div>\r\n                        <mat-error *ngIf=\"isSubmitted && searchFormGroup.get('count').hasError('required')\">Please choose a number</mat-error>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"d-flex justify-content-center pt-5\">\r\n                <button (click)=\"serach()\" type=\"button\" class=\"btn btn-primary btn-pill btn-lg colorBg font-size-h3 w-200px btn-shadow\">\r\n                  Search <i class=\"far fa-arrow-alt-circle-right\"></i>\r\n                </button>\r\n              </div>\r\n              <div class=\"tab-pane fade\" id=\"lr_tab_pane_2\" role=\"tabpanel\">Lorem Ipsum passages, and more recently with\r\n                desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum. Lorem Ipsum\r\n                passages, and more recently with desktop publishing software like Aldus PageMaker including versions of\r\n                Lorem Ipsum. Lorem Ipsum passages, and more recently with desktop publishing software like Aldus\r\n                PageMaker including versions of Lorem Ipsum.</div>\r\n            </div>\r\n          </form>\r\n          <!--end::Body-->\r\n        </div>\r\n        <!--end::Tiles Widget 1-->\r\n      </div>\r\n    </div>\r\n    <!--end::Row-->\r\n    <!--end::Dashboard-->\r\n  </div>\r\n  <!--end::Container-->\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rail',\n  templateUrl: './rail.component.html',\n  styleUrls: ['./rail.component.css']\n})\nexport class RailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpHeaders, HttpParams  } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\nimport { environment } from '../../../../../environments/environment';\nimport { config } from '../../../../shared/config';\nimport { LoginService } from '../../auth/login/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RailRetrieveService {\n\n  constructor(private httpClient: HttpClient, private loginService: LoginService) { }\n\n  getRails(railQuery) {\n    return this.httpClient.post( environment.railApiEndpoint +  'railing/retrieveAll', railQuery).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  searchAirport(airportCode) {\n    let params = new HttpParams();\n    params = params.append('query', airportCode);\n    return this.httpClient.get( environment.railApiEndpoint +  'airport/dropdown', {params: params}).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  searchRails(railQuery) {\n    return this.httpClient.post( environment.railApiEndpoint +  'airshopping', railQuery).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  getAllAirport() {\n    return this.httpClient.get( environment.railApiEndpoint +  'airport/all').pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  saveFavoriteRails(railingId) {\n    // console.log('favourite' + railingId);\n    return this.httpClient.post( environment.railApiEndpoint +  'railing/favorite', { favoriteRailing: railingId });\n  }\n\n  saveUnfavoriteRails(railingId) {\n    // console.log('unfavourite' + railingId);\n    return this.httpClient.post( environment.railApiEndpoint +  'railing/unfavorite', { unfavoriteRailing: railingId });\n  }\n\n  handleError(error) {\n    console.log(error);\n    let errorMessage = {};\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      errorMessage = {code:'-1', Error: `${error.error.message}`};\n    } else {\n      // server-side error\n      errorMessage = {code:'-1', status: error.status, Error: error.message};\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormArray, FormBuilder, FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nimport { LocalStorage } from '../../../../shared/storage/local-storage';\nimport { RailOrderService } from '../rail-order.service';\nimport { LoginService } from '../../auth/login/login.service';\nimport { Rail } from '../rail';\n\n@Component({\n  selector: 'app-rail-create-order',\n  templateUrl: './rail-create-order.component.html',\n  styleUrls: ['./rail-create-order.component.css']\n})\nexport class RailCreateOrderComponent extends Rail implements OnInit {\n\n  public selectedFlight = {} as any;\n  public searchCriteria = {} as any;\n  public queryOld = {\n    \"Query\": {\n      \"Order\": {\n        \"Offer\": [\n          {\n            \"OfferItem\": [\n              {\n                \"PassengerRefs\": \"T1\",\n                \"OfferItemID\": \"X9DC4432-6BAE-4B3C-AFF7-1-1\"\n              }\n            ],\n            \"OfferID\": \"X9DC4432-6BAE-4B3C-AFF7-1\",\n            \"Owner\": \"AA\",\n            \"ResponseID\": \"X9DC4432-6BAE-4B3C-AFF7\",\n            \"OrderItem\": null\n          }\n        ]\n      },\n      \"Payments\": null,\n      \"DataLists\": {\n        \"PassengerList\": {\n          \"Passenger\": [\n            {\n              \"PTC\": \"ADT\",\n              \"Individual\": {\n                \"Birthdate\": \"1983-02-02\",\n                \"Gender\": \"Female\",\n                \"NameTitle\": \"MRS\",\n                \"GivenName\": \"Nithya\",\n                \"MiddleName\": null,\n                \"Surname\": \"Venkatesan\"\n              },\n              \"ContactInfoRef\": \"ContactInfo-T1\",\n              \"PassengerID\": \"T1\"\n            }\n          ]\n        },\n        \"ContactList\": {\n          \"ContactInformation\": {\n            \"ContactProvided\": [\n              {\n                \"EmailAddress\": {\n                  \"EmailAddressValue\": \"m.g@gmail.com\"\n                }\n              },\n              {\n                \"Phone\": {\n                  \"Label\": \"mobile\",\n                  \"CountryDialingCode\": \"1\",\n                  \"AreaCode\": \"+1\",\n                  \"PhoneNumber\": \"6176427743\"\n                }\n              }\n            ],\n            \"ContactID\": \"ContactInfo-T1\"\n          }\n        }\n      },\n      \"Metadata\": null\n    },\n    \"OfferItem\": null,\n    \"SpecialServiceRequest\": null\n  }\n  public query = {\n    Query: {\n      Order: {\n        Offer: [\n        ]\n      },\n      Payments: null,\n      DataLists: {\n        PassengerList: {\n          Passenger: [\n          ]\n        },\n        ContactList: {\n          ContactInformation: {\n            ContactProvided: [\n            ],\n            ContactID: \"ContactInfo-T1\"\n          }\n        }\n      },\n      Metadata: null\n    },\n    OfferItem: null,\n    SpecialServiceRequest: null\n  }\n\n  public passengerFG = new FormGroup({  \n    WheelChair: new FormControl(false, Validators.required), \n    Birthdate: new FormControl('', Validators.required), \n    Gender: new FormControl('', Validators.required), \n    NameTitle: new FormControl('Mr', Validators.required), \n    GivenName: new FormControl('', Validators.required), \n    MiddleName: new FormControl('', Validators.required), \n    Surname: new FormControl('', Validators.required),\n    Country: new FormControl('', Validators.required),\n    FrequentFlyerNumber: new FormControl(''),\n    KnownTravelerNumber: new FormControl(''),\n    RegressNumber: new FormControl('')\n  });\n\n  public passengerAFG = new FormGroup({\n    passengers: new FormArray([])\n  });\n  passengerArr: FormArray;\n\n  public contactFG = new FormGroup({   \n    EmailAddressValue: new FormControl('', Validators.required), \n    Label: new FormControl('mobile'), \n    CountryDialingCode: new FormControl('1'), \n    AreaCode: new FormControl('', Validators.required), \n    PhoneNumber: new FormControl('', Validators.required)\n  });\n\n  public creditCardFG = new FormGroup({   \n    // CreditType: new FormControl('', Validators.required), \n    CreditCardNumber: new FormControl('', Validators.required), \n    SecurityCode: new FormControl('', Validators.required), \n    ExpMonth: new FormControl('', Validators.required), \n    ExpYear: new FormControl('', Validators.required), \n    FirstNameonCard: new FormControl('', Validators.required), \n    LastNameonCard: new FormControl('', Validators.required), \n    Street: new FormControl('', Validators.required),\n    City: new FormControl('', Validators.required), \n    PostalCode: new FormControl('', Validators.required), \n    CountryCode: new FormControl('', Validators.required)\n  });\n\n  public isSubmitted = false;\n  public fareAmount = 0;  \n  public baseAmount = 0;\n  public facilityCharge = 0;\n  public securityServiceFee = 0;\n  public maxDate = new Date();\n  public paymentType = this.paymentTypes[0];\n  public isLoading = false;\n\n  constructor(private router: Router, loginService: LoginService, private localStorage: LocalStorage,\n              private railOrderService: RailOrderService, private _snackBar: MatSnackBar) { \n    super(loginService);\n    document.body.style.backgroundSize = \"100% 165px\";\n    const selectedFlightTxt = this.localStorage.getItem('selectedFlight');\n    const searchCriteriaTxt = this.localStorage.getItem('searchFormGroup');\n    if(selectedFlightTxt != null && searchCriteriaTxt != null) {\n      this.selectedFlight = JSON.parse(selectedFlightTxt);\n      this.searchCriteria = JSON.parse(searchCriteriaTxt);\n      console.log(this.searchCriteria.count);\n      for(let index=1; index <= this.searchCriteria.count; index++){\n        this.addItem(index);\n      }\n      const amount = this.getFares(this.selectedFlight.departureFlight.flightFares);\n      this.fareAmount = amount.fareAmount;  \n      this.baseAmount = amount.baseAmount; \n      this.facilityCharge = amount.facilityCharge; \n      this.securityServiceFee = amount.securityServiceFee; \n    } else {\n      this.router.navigateByUrl('/Rail/Search');\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  createItem(index: number): FormGroup {\n    return new FormGroup({\n      Index: new FormControl(index, Validators.required),\n      WheelChair: new FormControl(false, Validators.required), \n      Birthdate: new FormControl('', Validators.required), \n      Gender: new FormControl('', Validators.required), \n      NameTitle: new FormControl('Mr', Validators.required), \n      GivenName: new FormControl('', Validators.required), \n      MiddleName: new FormControl('', Validators.required), \n      Surname: new FormControl('', Validators.required),\n      Country: new FormControl('', Validators.required),\n      FrequentFlyerNumber: new FormControl(''),\n      KnownTravelerNumber: new FormControl(''),\n      RegressNumber: new FormControl('')\n    });\n  }\n  \n  addItem(index: number): void {\n    this.passengerArr = this.passengerAFG.get('passengers') as FormArray;\n    this.passengerArr.push(this.createItem(index));\n  }\n\n  isMonthDisable(month) {\n    if(this.creditCardFG.value.ExpYear == new Date().getFullYear()){\n      if(new Date().getMonth() >= Number(month)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  cancel() {\n\n  }\n\n  bookFlight(){\n    this.isSubmitted = true;\n    if(this.passengerAFG.valid && this.contactFG.valid && (this.paymentType == this.paymentTypes[0] || this.creditCardFG.valid)) {\n      console.log('valid');\n      this.prepareQuery();\n      this.isLoading = true;\n      this.railOrderService.createOrder(this.query).subscribe((data: any) => {\n        this.isLoading = false;\n        if(data.errors!= null && data.errors.error!= null) {\n          console.log('createOrder error');\n          console.log(data.errors.error.text);\n          this._snackBar.open(data.errors.error.text, \"OK\");\n        } else {\n          console.log('createOrder success');\n          console.log(data);\n          if(data != null && data.response!= null && data.response.order != null && data.response.order.orderID != null) {\n            // this._snackBar.open(\"Order Id:\" + data.response.order.orderID, \"OK\");\n            console.log(data.response.order.orderID);\n            //this.router.navigateByUrl('/Rails/Orders');\n            //this.router.navigateByUrl('/');\n            this.router.navigateByUrl('/Rails/Status/'+ data.response.order.orderID);\n          }         \n        }\n      });\n    } else {\n      this.passengerAFG.markAllAsTouched();\n      this.contactFG.markAllAsTouched();\n      if(this.paymentType == this.paymentTypes[1]){\n        this.creditCardFG.markAllAsTouched();\n      }\n    }\n  }\n\n  prepareQuery() {\n    const flightFare = this.selectedFlight.departureFlight.flightFares.filter((flightFare) => flightFare.selectedFare)[0];\n    let offer = {\n      OfferItem: [\n        {\n          PassengerRefs: \"T1\",\n          OfferItemID: flightFare.offerItemID\n        }\n      ],\n      OfferID: flightFare.offerID,\n      Owner: this.selectedFlight.departureFlight.shoppingResponseID.owner,\n      ResponseID: this.selectedFlight.departureFlight.shoppingResponseID.responseID,\n      OrderItem: null\n    }\n    this.query.Query.Order.Offer = [];\n    this.query.Query.Order.Offer.push(offer);\n\n    this.query.Query.DataLists.PassengerList.Passenger = [];\n    for(let passenger of this.passengerAFG.value.passengers) {\n      const d = passenger.Birthdate.toISOString().slice(0, 10).split('-');   \n      const Birthdate =  d[0] + '-' + d[1] + '-' + d[2];\n      let passengerObj = {\n        PTC: \"ADT\",\n        Individual: {\n          Birthdate: Birthdate,\n          Gender: passenger.Gender,\n          NameTitle: passenger.NameTitle,\n          GivenName: passenger.GivenName,\n          MiddleName: passenger.MiddleName,\n          Surname: passenger.Surname\n        },\n        // ContactInfoRef: \"ContactInfo-T\" + passenger.Index,\n        ContactInfoRef: \"ContactInfo-T1\",\n        PassengerID: \"T\" + passenger.Index\n      }\n      this.query.Query.DataLists.PassengerList.Passenger.push(passengerObj);\n    }\n    \n    const contactValue = this.contactFG.value;\n    let contactProvidedEmail = {\n      EmailAddress: {\n        EmailAddressValue: contactValue.EmailAddressValue\n      }\n    };\n    let contactProvidedPhone = {\n      Phone: {\n        Label: contactValue.Label,\n        CountryDialingCode: contactValue.CountryDialingCode,\n        AreaCode: contactValue.AreaCode,\n        PhoneNumber: contactValue.PhoneNumber\n      }\n    };\n    this.query.Query.DataLists.ContactList.ContactInformation.ContactProvided = [];\n    this.query.Query.DataLists.ContactList.ContactInformation.ContactProvided.push(contactProvidedEmail);\n    this.query.Query.DataLists.ContactList.ContactInformation.ContactProvided.push(contactProvidedPhone);\n    /*this.railOrderService.gerOrderById('AA0018281EC52').subscribe((data: any) => {\n      console.log('gerOrderById');\n      console.log(data)\n    });*/\n    /*this.railOrderService.createOrder(this.query).subscribe((data: any) => {\n      if(data.errors!= null && data.errors.error!= null) {\n        console.log('createOrder error');\n        console.log(data.errors.error.text);\n      } else {\n        console.log('createOrder success');\n        console.log(data);\n      }\n    });*/\n  }\n\n}\n","<div *ngIf=\"isLoading\">\n    <mat-spinner class=\"spinner\" [diameter]=\"30\"></mat-spinner>\n</div>\n<!--begin::Entry-->\n<div *ngIf=\"!isLoading && selectedFlight != null\" class=\"d-flex flex-column-fluid\">\n    <!--begin::Container-->\n    <div class=\"container\">\n        <!--begin::Dashboard-->\n        <!--begin::Row-->\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"brdSmallBlock gutter-b\">\n                    <div class=\"brdSmallBlock_inner pt-4 flex-column\">\n                        <h2 class=\"text-white pl-2 opacity-70\">Review your booking</h2>\n                        <h6 class=\"text-white-50 pl-2\">Booking your information</h6>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!--end::Row-->\n        <!--begin::Row-->\n        <div class=\"row gutter-b\">\n            <div class=\"col-9\">\n                <!--begin::Details-->\n                <div class=\"card card-custom mb-3\">\n                    <div class=\"card-body p-0\">\n                        <!--begin::Top-->\n                        <div class=\"d-flex align-items-center flex-wrap p-5\">\n                            <div class=\"col-6 d-flex align-items-center flex-lg-fill pl-0\">\n                                <div class=\"symbol symbol-50 bg-gray-300 mr-4\">\n                                    <img (error) =\"onImgError($event)\" [src]=\"getImageName(selectedFlight.departureFlight.flightSegments[0].railID)\" alt=\"image\">\n                                </div>\n                                <div class=\"d-flex flex-column flex-wrap\">\n                                    <h5 class=\"mb-1\">{{selectedFlight.departureFlight.flightSegments[0].railName}}</h5>\n                                    <div class=\"d-flex\">\n                                        <span class=\"text-dark-50 font-weight-bold mr-2\">{{selectedFlight.departureFlight.flightSegments[0].railID + selectedFlight.departureFlight.flightSegments[0].flightNumber }}</span>\n                                        <span class=\"text-dark-50 font-weight-bold mr-2\">|</span>\n                                        <span class=\"text-dark-50 font-weight-bold\"> {{ selectedFlight.departureFlight.flightSegments[0].aircraftName }} </span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-6 d-flex align-items-center justify-content-center flex-lg-fill pl-0\">\n                                <div class=\"d-flex flex-column flex-wrap align-items-end\">\n                                    <h4 class=\"mb-1\">{{ selectedFlight.departureFlight.departureTime }}</h4>\n                                    <span class=\"text-dark-50 font-weight-bold\" title=\"{{ selectedFlight.departureFlight.departureAirportName }}\">{{ selectedFlight.departureFlight.departureAirportCode }}</span>\n                                </div>\n                                <div [appTooltip]=\"selectedFlight.departureFlight\" class=\"d-flex flex-column flex-wrap align-items-center min-w-150px ml-3 mr-3\">\n                                    <div class=\"hr-text font-size-sm text-dark-50 mb-1\">{{ selectedFlight.departureFlight.flightDuration }}</div>\n                                    <div *ngIf=\"selectedFlight.departureFlight.isPopUp\" id=\"popover\" class=\"popover fade show bs-popover-bottom\" style=\"top: 45px; left: auto;\" role=\"tooltip\" x-placement=\"bottom\">                \n                                        <div class=\"arrow\" style=\"bottom: -7px; left: 45%;\"></div>\n                                        <div class=\"popover-body font-size-lg text-center\">{{selectedFlight.departureFlight.popUpMessage}}</div>            \n                                    </div>\n                                    <span class=\"text-primary font-weight-bold\">{{ selectedFlight.departureFlight.numberOfStops }}</span>\n                                </div>\n                                <div class=\"d-flex flex-column flex-wrap\">\n                                    <h4 class=\"mb-1\">{{ selectedFlight.departureFlight.arrivalTime }}</h4>\n                                    <span class=\"text-dark-50 font-weight-bold\" title=\"{{ selectedFlight.departureFlight.arrivalAirportName }}\">{{ selectedFlight.departureFlight.arrivalAirportCode }}</span>\n                                </div>\n                            </div>\n                        </div>\n                        <!--end::Top-->\n                        <!--begin::Separator-->\n                        <div class=\"separator separator-solid\"></div>\n                        <!--end::Separator-->\n                    </div>\n                    <div class=\"card-body p-0\" *ngIf=\"selectedFlight.radioSelected == 'round'\">\n                        <!--begin::Top-->\n                        <div class=\"d-flex align-items-center flex-wrap p-5\">\n                            <div class=\"col-6 d-flex align-items-center flex-lg-fill pl-0\">\n                                <div class=\"symbol symbol-50 bg-gray-300 mr-4\">\n                                    <img (error) =\"onImgError($event)\" [src]=\"getImageName(selectedFlight.returnFlight.flightSegments[0].railID)\" alt=\"image\">\n                                </div>\n                                <div class=\"d-flex flex-column flex-wrap\">\n                                    <h5 class=\"mb-1\">{{selectedFlight.returnFlight.flightSegments[0].railName}}</h5>\n                                    <div class=\"d-flex\">\n                                        <span class=\"text-dark-50 font-weight-bold mr-2\">{{selectedFlight.returnFlight.flightSegments[0].railID + selectedFlight.returnFlight.flightSegments[0].flightNumber }}</span>\n                                        <span class=\"text-dark-50 font-weight-bold mr-2\">|</span>\n                                        <span class=\"text-dark-50 font-weight-bold\"> {{ selectedFlight.returnFlight.flightSegments[0].aircraftName }} </span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-6 d-flex align-items-center justify-content-center flex-lg-fill pl-0\">\n                                <div class=\"d-flex flex-column flex-wrap align-items-end\">\n                                    <h4 class=\"mb-1\">{{ selectedFlight.returnFlight.departureTime }}</h4>\n                                    <span class=\"text-dark-50 font-weight-bold\" title=\"{{ selectedFlight.returnFlight.departureAirportName }}\">{{ selectedFlight.returnFlight.departureAirportCode }}</span>\n                                </div>\n                                <div [appTooltip]=\"selectedFlight.returnFlight\" class=\"d-flex flex-column flex-wrap align-items-center min-w-150px ml-3 mr-3\">\n                                    <div class=\"hr-text font-size-sm text-dark-50 mb-1\">{{ selectedFlight.returnFlight.flightDuration }}</div>\n                                    <div *ngIf=\"selectedFlight.returnFlight.isPopUp\" id=\"popover2\" class=\"popover fade show bs-popover-bottom\" style=\"top: 45px; left: auto;\" role=\"tooltip\" x-placement=\"bottom\">                \n                                        <div class=\"arrow\" style=\"bottom: -7px; left: 45%;\"></div>\n                                        <div class=\"popover-body font-size-lg text-center\">{{selectedFlight.returnFlight.popUpMessage}}</div>            \n                                    </div>\n                                    <span class=\"text-primary mb-1 font-weight-bold\">{{ selectedFlight.returnFlight.numberOfStops }}</span>\n                                </div>\n                                <div class=\"d-flex flex-column flex-wrap\">\n                                    <h4 class=\"mb-1\">{{ selectedFlight.returnFlight.arrivalTime }}</h4>\n                                    <span class=\"text-dark-50 font-weight-bold\" title=\"{{ selectedFlight.returnFlight.arrivalAirportName }}\">{{ selectedFlight.returnFlight.arrivalAirportCode }}</span>\n                                </div>\n                            </div>\n                        </div>\n                        <!--end::Top-->\n                        <!--begin::Separator-->\n                        <div class=\"separator separator-solid\"></div>\n                        <!--end::Separator-->\n                    </div>\n                </div>\n                <!--end::Details-->\n                <!-- Start::Passenger -->                \n                <form [formGroup]=\"passengerAFG\">\n                    <div formArrayName=\"passengers\" *ngFor=\"let passenger of passengerAFG.get('passengers')['controls']; let i = index;\">\n                        <div class=\"card card-custom mb-3\" [formGroupName]=\"i\">\n                            <div class=\"card-header\">\n                                <div class=\"card-title\">\n                                    <h3 class=\"card-label\">Passenger-{{i+1}} Details</h3>\n                                </div>\n                                <div class=\"card-toolbar\">\n                                    <div class=\"form-group mb-0\">\n                                        <div class=\"col-form-label\">\n                                            <div class=\"checkbox-inline\">\n                                               <mat-checkbox formControlName=\"WheelChair\">WheelChair\n                                                <span class=\"pl-1 text-black-50\">(Add special assistance for passenger)</span>\n                                               </mat-checkbox>                                                \n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"card-body\">\n                                <div class=\"row\">\n                                    <div class=\"col-4 form-group\">\n                                        <mat-radio-group formControlName=\"NameTitle\" aria-label=\"Select an option\">\n                                            <mat-radio-button class=\"mat-primary\" value=\"Mr\">Mr</mat-radio-button>\n                                            <mat-radio-button value=\"Mrs\">Mrs</mat-radio-button>\n                                            <mat-radio-button value=\"Miss\">Miss</mat-radio-button>\n                                        </mat-radio-group>\n                                    </div>\n                                    <div class=\"col-8 form-group\"></div>\n                                    <div class=\"col-4 form-group\">\n                                        <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                            <mat-label>First Name</mat-label>\n                                            <input matInput formControlName=\"GivenName\" required>\n                                            <mat-error *ngIf=\"passengerFG.get('GivenName').hasError('required')\">First Name is Required</mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-4 form-group\">\n                                        <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                            <mat-label>Middle Name</mat-label>\n                                            <input matInput formControlName=\"MiddleName\" required>\n                                            <mat-error *ngIf=\"passengerFG.get('MiddleName').hasError('required')\">Middle Name is Required</mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-4 form-group\">\n                                        <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                            <mat-label>Last Name</mat-label>\n                                            <input matInput formControlName=\"Surname\" required>\n                                            <mat-error *ngIf=\"passengerFG.get('Surname').hasError('required')\">Last Name is Required</mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    \n                                    <div class=\"col-4 form-group\">\n                                        <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                            <mat-label>Date of Birth</mat-label>\n                                            <input matInput [max]=\"maxDate\" formControlName=\"Birthdate\" [matDatepicker]=\"picker\" required>\n                                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                            <mat-datepicker startView=\"multi-year\" #picker></mat-datepicker>\n                                            <mat-error *ngIf=\"passengerFG.get('Birthdate').hasError('required')\">Date of Birth is Required</mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-4 form-group\">\n                                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                            <mat-label>Gender</mat-label>\n                                            <mat-select formControlName=\"Gender\" required>\n                                              <mat-option *ngFor=\"let gen of gender\" [value]=\"gen\">\n                                                {{gen}}\n                                              </mat-option>\n                                            </mat-select>\n                                            <mat-error *ngIf=\"passengerFG.get('Gender').hasError('required')\">Please choose a Gender</mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-4 form-group\">\n                                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                            <mat-label>Country</mat-label>\n                                            <mat-select formControlName=\"Country\" required>\n                                              <mat-option *ngFor=\"let c of countries\" [value]=\"c\">\n                                                {{c}}\n                                              </mat-option>\n                                            </mat-select>\n                                            <mat-error *ngIf=\"passengerFG.get('Country').hasError('required')\">Please choose a Country</mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-4 form-group\">\n                                        <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                            <mat-label>Frequent Flyer Number</mat-label>\n                                            <input matInput formControlName=\"FrequentFlyerNumber\">\n                                            <mat-error *ngIf=\"passengerFG.get('FrequentFlyerNumber').hasError('required')\">Frequent Flyer Number is Required</mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-4 form-group\">\n                                        <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                            <mat-label>Known Traveler Number</mat-label>\n                                            <input matInput formControlName=\"KnownTravelerNumber\">\n                                            <mat-error *ngIf=\"passengerFG.get('KnownTravelerNumber').hasError('required')\">Known Traveler Number is Required</mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-4 form-group\">\n                                        <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                            <mat-label>Redress Number</mat-label>\n                                            <input matInput formControlName=\"RegressNumber\">\n                                            <mat-error *ngIf=\"passengerFG.get('RegressNumber').hasError('required')\">Redress Number is Required</mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>                    \n                </form>\n                <!-- end::Passenger -->\n                <!-- Start::Trip -->\n                <form [formGroup]=\"contactFG\" class=\"card card-custom mt-3\">\n                    <div class=\"card-header\">\n                        <div class=\"card-title\">\n                            <h3 class=\"card-label\">Trip contact Details</h3>\n                        </div>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-4 form-group\">\n                                <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                    <mat-label>Primary Email</mat-label>\n                                    <input matInput formControlName=\"EmailAddressValue\" type=\"email\" name=\"email\" email=\"true\" required>\n                                    <mat-error *ngIf=\"contactFG.get('EmailAddressValue').hasError('required')\">Primary Email is Required</mat-error>\n                                    <mat-error *ngIf=\"contactFG.get('EmailAddressValue').hasError('email')\">Not a Valid Email</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-4 form-group\">\n                                <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                    <mat-label>Country Code</mat-label>\n                                    <input matInput formControlName=\"AreaCode\" required>\n                                    <mat-error *ngIf=\"contactFG.get('AreaCode').hasError('required')\">Country Code is Required</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-4 form-group\">\n                                <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                    <mat-label>Primary phone</mat-label>\n                                    <input matInput formControlName=\"PhoneNumber\" required>\n                                    <mat-error *ngIf=\"contactFG.get('PhoneNumber').hasError('required')\">Primary phone is Required</mat-error>\n                                </mat-form-field>\n                            </div>                 \n                        </div>\n                    </div>\n                </form>\n                <!-- end::Trip -->\n                <!-- Start::Payment -->\n                <div class=\"card card-custom mt-3\">\n                    <div class=\"card-header\">\n                        <div class=\"card-title\">\n                            <h3 class=\"card-label\">Payment Information</h3>\n                        </div>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-4 form-group\">\n                                <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                    <mat-label>Payment Type</mat-label>\n                                    <mat-select [(value)]=\"paymentType\" required>\n                                      <mat-option *ngFor=\"let p of paymentTypes\" [value]=\"p\">\n                                        {{p}}\n                                      </mat-option>\n                                    </mat-select>\n                                    <mat-error *ngIf=\"passengerFG.get('Gender').hasError('required')\">Please choose a Gender</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-8 form-group\"></div>\n                        </div>\n                        <form *ngIf=\"paymentType == paymentTypes[1]\" [formGroup]=\"creditCardFG\" class=\"row\">\n                            <!--<div class=\"col-4 form-group\">\n                                <mat-form-field appearance=\"outline\">\n                                    <mat-label>Credit Card Type</mat-label>\n                                    <mat-select formControlName=\"CreditType\" required>\n                                      <mat-option *ngFor=\"let c of cardTypes\" [value]=\"c\">\n                                        {{c}}\n                                      </mat-option>\n                                    </mat-select>\n                                    <mat-error *ngIf=\"creditCardFG.get('CreditType').hasError('required')\">Please choose Credit Card Type</mat-error>\n                                </mat-form-field>\n                            </div>-->\n                            <div class=\"col-4 form-group\">\n                                <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                    <mat-label>Credit Card Number</mat-label>\n                                    <input matInput appCreditCard formControlName=\"CreditCardNumber\" required>\n                                    <mat-error *ngIf=\"creditCardFG.get('CreditCardNumber').hasError('required')\">Credit Card Number is Required</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-3 form-group\">\n                                <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                    <mat-label>Security Code</mat-label>\n                                    <input matInput appOnlyNumber formControlName=\"SecurityCode\"  maxlength=\"4\" required>\n                                    <mat-error *ngIf=\"creditCardFG.get('SecurityCode').hasError('required')\">Security Code is Required</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-2 form-group\">\n                                <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                    <mat-label>Exp Month</mat-label>\n                                    <mat-select formControlName=\"ExpMonth\" required>\n                                      <mat-option *ngFor=\"let m of monthArray\" [disabled]=\"isMonthDisable(m)\" [value]=\"m\">\n                                        {{m}}\n                                      </mat-option>\n                                    </mat-select>\n                                    <mat-error *ngIf=\"creditCardFG.get('ExpMonth').hasError('required')\">Please choose a Month</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-3 form-group\">\n                                <mat-form-field appearance=\"outline\">\n                                    <mat-label>Exp Year</mat-label>\n                                    <mat-select formControlName=\"ExpYear\" required>\n                                      <mat-option *ngFor=\"let y of yearArray\" [value]=\"y\">\n                                        {{y}}\n                                      </mat-option>\n                                    </mat-select>\n                                    <mat-error *ngIf=\"creditCardFG.get('ExpYear').hasError('required')\">Please choose a Year</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-6 form-group\">\n                                <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                    <mat-label>First Name on Card</mat-label>\n                                    <input matInput formControlName=\"FirstNameonCard\" required>\n                                    <mat-error *ngIf=\"creditCardFG.get('FirstNameonCard').hasError('required')\">First Name on Card is Required</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-6 form-group\">\n                                <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                    <mat-label>Last Name on Card</mat-label>\n                                    <input matInput formControlName=\"LastNameonCard\" required>\n                                    <mat-error *ngIf=\"creditCardFG.get('LastNameonCard').hasError('required')\">Last Name on Card is Required</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-12 form-group\">\n                                <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                    <mat-label>Street</mat-label>\n                                    <input matInput formControlName=\"Street\" required>\n                                    <mat-error *ngIf=\"creditCardFG.get('Street').hasError('required')\">Street is Required</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-4 form-group\">\n                                <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                    <mat-label>City</mat-label>\n                                    <input matInput formControlName=\"City\" required>\n                                    <mat-error *ngIf=\"creditCardFG.get('City').hasError('required')\">City is Required</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-4 form-group\">\n                                <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                    <mat-label>Postal Code</mat-label>\n                                    <input matInput formControlName=\"PostalCode\" required>\n                                    <mat-error *ngIf=\"creditCardFG.get('PostalCode').hasError('required')\">Postal Code is Required</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-4 form-group\">\n                                <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                    <mat-label>Country Code</mat-label>\n                                    <input matInput formControlName=\"CountryCode\" required>\n                                    <mat-error *ngIf=\"creditCardFG.get('CountryCode').hasError('required')\">Country Code is Required</mat-error>\n                                </mat-form-field>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <!-- end::Payment -->\n                <!-- Start::Buttons -->\n                <div class=\"row mt-4 align-items-end\">\n                    <div class=\"col-12 ml-lg-auto text-right\">\n                        <button type=\"button\" (click)=\"cancel()\" class=\"btn btn-secondary btn-lg\">Cancel</button>\n                        <button type=\"submit\" (click)=\"bookFlight()\" class=\"btn btn-primary btn-lg font-weight-bold ml-2\">Book Flight</button>\n                    </div>\n                </div>\n                <!-- End::Buttons -->\n            </div>\n            <!--Start::Price-->\n            <div class=\"col-3 pl-0\">\n                <div class=\"card card-custom\">\n                    <div class=\"card-header\">\n                        <div class=\"card-title\">\n                            <h3 class=\"card-label\">Fare Summary</h3>\n                        </div>\n                    </div>\n                    <div class=\"card-body p-0\">\n                        <div class=\"d-flex pt-3 justify-content-around\">\n                            <div class=\"col-8 font-size-lg text-left pl-6\">Adult (per passenger)</div>\n                            <div class=\"col-4 font-size-lg font-weight-bold text-right\">${{ baseAmount | number : '1.2-2' }}</div>\n                        </div>\n                        <div class=\"separator separator-dashed pt-3 mb-3\"></div>\n                        <div class=\"d-flex justify-content-around\">\n                            <div class=\"col-8 font-size-lg text-left pl-6\">U.S Passenger Facility Charge</div>\n                            <div class=\"col-4 font-size-lg font-weight-bold text-right\">${{ facilityCharge | number : '1.2-2' }}</div>\n                        </div>\n                        <div class=\"separator separator-dashed pt-3 mb-3\"></div>\n                        <div class=\"d-flex pb-3 justify-content-around\">\n                            <div class=\"col-8 font-size-lg text-left pl-6\">Passenger Civil Aviation Security Service Fee</div>\n                            <div class=\"col-4 font-size-lg font-weight-bold text-right\">${{ securityServiceFee | number : '1.2-2' }}</div>\n                        </div>\n                        <div class=\"d-flex border-top border-2 pt-2 pb-2 justify-content-around\">\n                            <div class=\"col-7 text-left font-size-h4 pl-6\">Total Amount</div>\n                            <div class=\"col-5 text-right font-weight-bold font-size-h3\">${{ fareAmount | number : '1.2-2' }}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--End::Price-->\n        </div>\n        <!--end::Row-->\n        <!--end::Dashboard-->\n    </div>\n    <!--end::Container-->\n</div>\n<!--end::Entry-->\n","import { ErrorStateMatcher } from '@angular/material/core';\r\nimport { FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\n\r\nexport type trip = 'one' | 'round';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n      const invalidCtrl = !!(control && control.invalid);\r\n      const invalidParent = !!(control && control.parent && control.parent.invalid);\r\n      const errors = control.parent.errors;\r\n      const controlName = this.getControlName(control);\r\n      \r\n      if(errors != null && errors.toFromMatch == true && controlName == 'to') {\r\n        return true;\r\n      } else if (errors != null && errors.startEndMatch == true && controlName == 'end') {\r\n        return true;\r\n      } else {\r\n        return invalidCtrl && control.touched;\r\n      }\r\n    }\r\n  \r\n    getControlName(c): string | null {\r\n      const formGroup = c.parent.controls;\r\n      return Object.keys(formGroup).find(name => c === formGroup[name]) || null;\r\n    }\r\n}","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {MatSort, Sort} from '@angular/material/sort';\n\nimport { LoginService } from '../../auth/login/login.service';\nimport { Rail } from '../rail';\nimport { LocalStorage } from '../../../../shared/storage/local-storage';\nimport { RailOrderService } from '../rail-order.service';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-rail-orders',\n  templateUrl: './rail-orders.component.html',\n  styleUrls: ['./rail-orders.component.css']\n})\nexport class RailOrdersComponent extends Rail implements OnInit, AfterViewInit  {\n\n  public searchOrderFG = new FormGroup({   \n    FirstName: new FormControl('', Validators.required), \n    LastName: new FormControl('', Validators.required)\n  });\n  public searchOrderIdFG = new FormGroup({   \n    OrderId: new FormControl('', Validators.required), \n  });\n  public isSubmitted = false;\n  public isLoading = false;\n  public orders = [];\n  public sortedOrders: MatTableDataSource<any>;\n\n  displayedColumns: string[] = ['OrderId', 'PassengerName', 'Depature', 'Airport', 'Creation', 'Agency', 'AgencyId'];\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private router: Router, loginService: LoginService, private localStorage: LocalStorage,\n    private railOrderService: RailOrderService, private _snackBar: MatSnackBar) { \n    super(loginService);\n    document.body.style.backgroundSize = \"100% 165px\";\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n  }\n\n  search() {\n    this.isSubmitted = true;\n    if(this.searchOrderFG.valid) {\n      const value = this.searchOrderFG.value;\n      this.searchOrderIdFG.reset();\n      this.isLoading = true;\n      this.railOrderService.gerOrderByName(value.FirstName, value.LastName).subscribe((data: any) => {\n        // console.log('gerOrderByName');\n        // console.log(data);\n        this.isLoading = false;\n        this.prepareOrders(data);\n      });\n    } else {\n      this.searchOrderFG.markAllAsTouched();\n    }\n  }\n\n  searchById() {\n    this.isSubmitted = true;\n    if(this.searchOrderIdFG.valid) {\n      const value = this.searchOrderIdFG.value;\n      this.searchOrderFG.reset();\n      this.isLoading = true;\n      this.railOrderService.gerOrderById(value.OrderId).subscribe((data: any) => {\n        // console.log('gerOrderByName');\n        // console.log(data);\n        this.isLoading = false;\n        let order = {\n          flightSegment: [],\n          passengerList: [],\n          contactList: [],\n          OrderId: data.response.order.orderID,\n        };\n        order = this.getOrderData(data, order);\n        order = this.changeOrderData(order);\n        this.orders = [];\n        this.orders.push(order);\n        this.sortedOrders = new MatTableDataSource(this.orders.slice());\n        this.sortedOrders.sort = this.sort;\n      });\n    } else {\n      this.searchOrderFG.markAllAsTouched();\n    }\n  }\n\n  prepareOrders(data) {\n    this.orders = [];\n    if(data != null && data.response != null && data.response.orders != null && data.response.orders.order != null) {\n      for(let orderObj of data.response.orders.order) {     \n        let order = {\n          OrderId : orderObj.orderID || orderObj.OrderID,\n          PassengerName : ((orderObj.passengers||{}).fullName||{}).text || 'NA',\n          Depature : ((orderObj.departure||{}).date||{}).text  || 'NA',\n          Airport : ((orderObj.departure||{}).airportCode||{}).text || 'NA',\n          Creation : orderObj.creationDate || 'NA',\n          Agency : (orderObj.agency||{}).name || 'NA',\n          AgencyId : ((orderObj.agency||{}).agencyID||{}).text  || 'NA'\n        }\n        this.orders.push(order);\n      }\n    }\n    this.sortedOrders = new MatTableDataSource(this.orders.slice());\n    this.sortedOrders.sort = this.sort;\n  }\n}\n","<div *ngIf=\"isLoading\">\n    <mat-spinner class=\"spinner\" [diameter]=\"30\"></mat-spinner>\n</div>\n<div class=\"d-flex flex-column-fluid\">    \n  <div class=\"container\">\n    <!--begin::Row-->\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"brdSmallBlock gutter-b d-flex\">\n          <div class=\"brdSmallBlock_inner pt-4 flex-column\">\n            <h2 class=\"text-white pl-2 opacity-70\">Order Details</h2>\n            <h6 class=\"text-white-50 pl-2\">Order details are displayed here</h6>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--end::Row-->    \n      <div class=\"card card-custom\">\n        <div class=\"card-header\">\n          <div class=\"card-title\">\n            <form [formGroup]=\"searchOrderFG\" class=\"d-flex\">\n            <mat-form-field class=\"\" appearance=\"outline\">\n              <mat-label>First Name</mat-label>\n              <input matInput formControlName=\"FirstName\" required>\n              <mat-error *ngIf=\"searchOrderFG.get('FirstName').hasError('required')\">First Name is Required</mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"ml-2\" appearance=\"outline\">\n              <mat-label>Last Name</mat-label>\n              <input matInput formControlName=\"LastName\" required>\n              <mat-error *ngIf=\"searchOrderFG.get('LastName').hasError('required')\">Last Name is Required</mat-error>\n            </mat-form-field>\n            <button type=\"button\" (click)=\"search()\" class=\"btn btn-primary font-size-h5 ml-2 mt-2 h-40px\">Search</button>\n          </form>\n          </div>\n        </div>\n        <div class=\"card-header justify-content-center\">\n          <div class=\"row align-items-center\"> \n            (OR)\n          </div>\n        </div>\n        <div class=\"card-header\">\n          <div class=\"card-title\">\n            <form [formGroup]=\"searchOrderIdFG\" class=\"d-flex\">\n            <mat-form-field class=\"\" appearance=\"outline\">\n              <mat-label>OrderId</mat-label>\n              <input matInput formControlName=\"OrderId\" required>\n              <mat-error *ngIf=\"searchOrderIdFG.get('OrderId').hasError('required')\">OrderId is Required</mat-error>\n            </mat-form-field>\n            <button type=\"button\" (click)=\"searchById()\" class=\"btn btn-primary font-size-h5 ml-2 mt-2 h-40px\">Search</button>\n          </form>\n          </div>\n        </div>\n        <div class=\"card-body p-0\">          \n            <table mat-table [dataSource]=\"sortedOrders\" [ngClass]=\"isSubmitted && !isLoading ? '' : 'd-none'\" matSort class=\"w-100\">  \n              <!--- Note that these columns can be defined in any order.\n                    The actual rendered columns are set as a property on the row definition\" -->            \n              <!-- Position Column -->\n              <ng-container matColumnDef=\"OrderId\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Order Id </th>\n                <td mat-cell *matCellDef=\"let element\"> \n                    <a routerLink=\"/Rails/Orders/{{element.OrderId}}\">\n                      {{element.OrderId}} \n                    </a>\n                </td>\n              </ng-container>\n            \n              <!-- Name Column -->\n              <ng-container matColumnDef=\"PassengerName\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Passenger Name </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.PassengerName}} </td>\n              </ng-container>\n            \n              <!-- Weight Column -->\n              <ng-container matColumnDef=\"Depature\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Depature </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.Depature}} </td>\n              </ng-container>\n            \n              <!-- Symbol Column -->\n              <ng-container matColumnDef=\"Airport\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Airport </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.Airport}} </td>\n              </ng-container>\n            \n              <!-- Symbol Column -->\n              <ng-container matColumnDef=\"Creation\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Creation </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.Creation}} </td>\n              </ng-container>\n              \n              <!-- Symbol Column -->\n              <ng-container matColumnDef=\"Agency\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Agency </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.Agency}} </td>\n              </ng-container>\n              \n              <!-- Symbol Column -->\n              <ng-container matColumnDef=\"AgencyId\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Agency Id </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.AgencyId}} </td>\n              </ng-container>\n              \n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>          \n        </div>\n      </div>\n  </div>\n</div>\n\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpHeaders, HttpParams  } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\nimport { environment } from '../../../../environments/environment';\nimport { config } from '../../../shared/config';\nimport { LoginService } from '../auth/login/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RailOrderService {\n  constructor(private httpClient: HttpClient, private loginService: LoginService) { }\n\n  gerOrderById(orderId: string) {\n    let params = new HttpParams();\n    // params = params.append('query', airportCode);\n    return this.httpClient.get( environment.railApiEndpoint +  'orders/'+ orderId, {params: params}).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  cancelOrderById(orderId: string) {\n    let params = new HttpParams();\n    // params = params.append('query', airportCode);\n    return this.httpClient.delete( environment.railApiEndpoint +  'orders/'+ orderId, {params: params}).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  gerOrderByName(firstName: string, lastName: string) {\n    let params = new HttpParams();\n    params = params.append('firstName', firstName);\n    params = params.append('lastName', lastName);\n    return this.httpClient.get( environment.railApiEndpoint +  'orders/name', {params: params}).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  createOrder(railOrderQuery) {\n    return this.httpClient.post( environment.railApiEndpoint +  'orders', railOrderQuery).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  handleError(error) {\n    console.log(error);\n    let errorMessage = {};\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      errorMessage = {code:'-1', Error: `${error.error.message}`};\n    } else {\n      // server-side error\n      errorMessage = {code:'-1', status: error.status, Error: error.message};\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { RailRetrieveService } from '../../../rail-dashboard/rail-retrieve.service';\nimport { Router } from '@angular/router';\nimport { RailItem } from './rail-item';\nimport { LoginService } from '../../../../auth/login/login.service';\n\n@Component({\n  selector: 'app-rail-item',\n  templateUrl: './rail-item.component.html',\n  styleUrls: ['./rail-item.component.css']\n})\nexport class RailItemComponent extends RailItem implements OnInit {\n\n  constructor(public railRetrieveService:RailRetrieveService ,router: Router,loginService: LoginService) {\n    super(router, loginService);\n  }\n\n  ngOnInit() {\n  }\n}\n","<p>air line item works!</p>","import { Router } from '@angular/router';\nimport { Rail } from '../../../rail';\nimport { LoginService } from '../../../../auth/login/login.service';\nimport { config } from '../../../../../../shared/config';\n\nexport class RailItem extends Rail {\n\n  constructor(protected router: Router, loginService: LoginService) {\n    super(loginService);\n  }\n}\n","import { Component, OnInit, Input, ViewChild, EventEmitter, OnDestroy, SimpleChanges, SimpleChange, AfterViewInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { RailRetrieveService } from '../../rail-dashboard/rail-retrieve.service';\nimport { config } from '../../../../../shared/config';\nimport { RailItem } from './rail-item/rail-item';\nimport { LoginService } from '../../../auth/login/login.service';\nimport { collapseAnimation } from '../../../../../animations';\nimport { MyErrorStateMatcher, trip } from '../../../../../shared/models/rail.model';\nimport { LocalStorage } from '../../../../../shared/storage/local-storage';\nimport { Rail } from '../../rail';\n\n@Component({\n  selector: 'app-rail-list',\n  templateUrl: './rail-list.component.html',\n  styleUrls: ['./rail-list.component.css'],\n  animations: [\n    collapseAnimation\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class RailListComponent extends Rail implements OnInit, AfterViewInit, OnDestroy {\n\n  public flightList = [];\n  public props;\n  public isLoading = false;\n  public selectedFlight: any;\n  private searchSubscription: Subscription;\n  public radioSelected : trip = \"one\";\n\n  @Input() search: Observable<any>;\n  constructor(private railRetrieveService: RailRetrieveService, private router: Router, \n              loginService: LoginService, private localStorage: LocalStorage) {\n    super(loginService);\n  }\n\n  ngOnInit() {\n    this.searchSubscription = this.search.subscribe((query) => {\n      if(query != null) {\n        this.searchRail(query);\n      }\n    });\n  }\n  \n  ngAfterViewInit() {  \n  }\n\n  ngOnDestroy() {\n    this.searchSubscription.unsubscribe();\n  }\n\n  searchRail(query) {\n    this.isLoading = true;\n    this.selectedFlight = null;\n    this.flightList = [];\n    if(query.Flights.length > 1) {\n      this.radioSelected = \"round\";\n    } else {\n      this.radioSelected = \"one\";\n    }\n    this.railRetrieveService.searchRails(query).\n      subscribe((data: any) => {\n        const offersWithDetails = data.offersWithDetails;\n        if( offersWithDetails != null && offersWithDetails.length > 0\n          && offersWithDetails[0].flightsPlusSegments != null && offersWithDetails[0].flightsPlusSegments.length > 0) {\n            this.getSortedData(data);\n            // console.log('flightList' + this.flightList.length);        \n        } else {\n          console.log('response is not correct format');  \n        }\n        this.isLoading = false;\n      });\n  }\n\n  toggleFare(flightObj) {\n    if(flightObj.showPrices == null){\n      flightObj.showPrices = false;\n    }\n    flightObj.showPrices = !flightObj.showPrices; \n  }\n\n  selectFare(flight, flightFare) {\n    if(this.selectedFlight != null){\n      for(let selectedFlight of this.selectedFlight.departureFlight.flightFares){\n        selectedFlight.selectedFare = false;\n      }  \n      this.selectedFlight.selected = false;\n    }\n    this.selectedFlight = flight;\n    this.selectedFlight.selected = true;\n    this.selectedFlight.radioSelected = this.radioSelected;\n    for(let selectedFlight of this.selectedFlight.departureFlight.flightFares){\n      selectedFlight.selectedFare = false;\n    }    \n    flightFare.selectedFare = true;\n  }\n\n  getSortedData(data) {\n    this.props = {\n      flightSearchResult: data\n    };\n    let list = [];\n    list = this.filterAirOffers(this.props.flightSearchResult.offersWithDetails);\n    list = list.sort((a, b) => a.departureFlight.flightFares[0].totalPrice - b.departureFlight.flightFares[0].totalPrice);\n    for(let flight of list) {\n      if(flight.departureFlight.flightSegments.length > 1){\n        // console.log(flight.departureFlight.flightSegments);\n        flight.departureFlight.popUpMessage = \"\";\n        let departureStops = [];       \n        let popUpMessage = [];\n        for(let i=1; i < flight.departureFlight.flightSegments.length; i++) {\n          const flightSegment = flight.departureFlight.flightSegments[i];\n          const pFlightSegment = flight.departureFlight.flightSegments[i-1];\n          departureStops.push(flightSegment.departureAirportCode);\n          popUpMessage.push(this.getTimeDiff(pFlightSegment, flightSegment));\n        }\n        flight.departureFlight.numberOfStops = flight.departureFlight.numberOfStops +  \" via \" + departureStops.join(\", \");      \n        flight.departureFlight.popUpMessage = popUpMessage.join(\"\\n\");   \n      }\n      if(this.radioSelected == 'round' && flight.returnFlight.flightSegments.length > 1){\n        // console.log(flight.returnFlight.flightSegments);\n        flight.returnFlight.popUpMessage = \"\";\n        let returnStops = [];\n        let popUpMessage = [];\n        for(let i=1; i < flight.returnFlight.flightSegments.length; i++) {\n          const flightSegment = flight.returnFlight.flightSegments[i];\n          const pFlightSegment = flight.departureFlight.flightSegments[i-1];\n          returnStops.push(flightSegment.departureAirportCode);\n          popUpMessage.push(this.getTimeDiff(pFlightSegment, flightSegment));\n        }\n        flight.returnFlight.numberOfStops = flight.returnFlight.numberOfStops +  \" via \" + returnStops.join(\", \");       \n        flight.returnFlight.popUpMessage = popUpMessage.join(\"\\n\");      \n      }\n      /* \n      aircraftName: \"Embraer 175\"\n      railID: \"AA\"\n      arrivalAirportCode: \"STL\"\n      arrivalAirportName: \"St Louis Lambert Intl Apt, US\"\n      arrivalDate: \"2020-10-01\"\n      arrivalTerminal: {name: \"1\"}\n      arrivalTime: \"16:42\"\n      departureAirportCode: \"DFW\"\n      departureAirportName: \"Dallas Dallas-Fort Worth Intl Apt, US\"\n      departureDate: \"2020-10-01\"\n      departureTerminal: {name: \"0\"}\n      departureTime: \"15:00\"\n      flightNumber: \"3400\"\n      \n      Plane change\n      New Delhi (DEL) | 7hr 5mins Layover\n      \n      Terminal change\n      Rome - Fiumicino Apt (FCO) ( 3 to 1 ) | 9hr 10mins Layover */\n\n      this.getSortedCabinTypeData(flight, 'departureFlight');\n      /*if(this.radioSelected == \"round\"){\n        this.getSortedCabinTypeData(flight, 'returnFlight');\n      }*/\n\n    }\n    this.flightList = list;\n  }\n\n  getTimeDiff(pFlightSegment, flightSegment) {\n    const pFlightSegmentDate = new Date(pFlightSegment.arrivalDate + \"T\" + pFlightSegment.arrivalTime + \":00\")\n    const FlightSegmentDate = new Date(flightSegment.departureDate + \"T\" + flightSegment.departureTime + \":00\")\n    var diff = pFlightSegmentDate.getTime() - FlightSegmentDate.getTime();\n    var diff_as_date = new Date(diff);\n    // diff_as_date.getSeconds(); // second\n    const hours = diff_as_date.getHours() < 9 ? \"0\" + diff_as_date.getHours() : diff_as_date.getHours();\n    const minutes = diff_as_date.getMinutes() < 9 ? \"0\" + diff_as_date.getMinutes() : diff_as_date.getMinutes();\n    const timeDiff = hours + \"H \" + minutes + \"M\";\n    /*\n    Plane change\n    New Delhi (DEL) | 7hr 5mins Layover\n    \n    Terminal change\n    Rome - Fiumicino Apt (FCO) ( 3 to 1 ) | 9hr 10mins Layover \n    */\n    //const str = \"Stop:\" + flightSegment.departureAirportCode + \" waiting time:\" + timeDiff;\n    const str = flightSegment.departureAirportCode + \" | \" + timeDiff + \" Layover\";\n    // console.log(str);\n    return str;\n  }\n\n  getSortedCabinTypeData(flight, type) {\n    let flightFares = flight[type].flightFares;\n    let fares = {\n      \"Economy\":[],\n      \"First Class\": []\n    };\n    for(const flightFare of flightFares){\n      flightFare.cabinType = flightFare.cabinType == \"Coach Economy\" ? \"Economy\" : flightFare.cabinType;\n      fares[flightFare.cabinType] = fares[flightFare.cabinType] || [];\n      fares[flightFare.cabinType].push(flightFare);\n    }\n    for(const fare in fares){\n      fares[fare] = fares[fare].sort((a, b) => a.totalPrice - b.totalPrice);\n    }\n    let sortedFlightFares = [];\n    sortedFlightFares.push(...fares[\"Economy\"]);\n    sortedFlightFares.push(...fares[\"First Class\"]);\n    flight[type].flightFares = sortedFlightFares;\n  }\n\n  bookNow() {\n    console.log('Book Now');\n    this.localStorage.setItem('selectedFlight', JSON.stringify(this.selectedFlight));\n    this.router.navigateByUrl('/Rails/Booking');\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n  filterAirOffers(offers)  {\n    const offersMap = {};\n    if (offers[0].flightsPlusSegments.length === 1) {\n      for (let offer of offers) {\n        if (offer.flightsPlusSegments[0].flight.flightKey in offersMap) {\n          offersMap[offer.flightsPlusSegments[0].flight.flightKey].departureFlight.flightFares.push(this.getFlightFare(offer));\n        } else {\n          offersMap[offer.flightsPlusSegments[0].flight.flightKey] = this.createFinalizedOffers(offer);\n        }\n      }\n    } else {\n      for (let offer of offers) {\n        if (offer.flightsPlusSegments[0].flight.flightKey.concat(offer.flightsPlusSegments[1].flight.flightKey) in offersMap) {\n          offersMap[offer.flightsPlusSegments[0].flight.flightKey.concat(offer.flightsPlusSegments[1].flight.flightKey)].departureFlight.flightFares.push(this.getFlightFare(offer));\n        } else {\n          offersMap[offer.flightsPlusSegments[0].flight.flightKey.concat(offer.flightsPlusSegments[1].flight.flightKey)] = this.createFinalizedOffers(offer);\n        }\n      }\n    }\n    //console.log(offersMap);\n    const offersMapKeys = Object.keys(offersMap);\n    let filteredAirOffers = [];\n    for (let offerKey of offersMapKeys) {\n      filteredAirOffers = filteredAirOffers.concat(offersMap[offerKey]);\n    }\n    // console.log(filteredAirOffers);\n    return filteredAirOffers;\n  }\n  \n  getFlightFare(offer) {\n    let flightFare = {\n      totalPrice: (Number(offer.totalPrice.detailCurrencyPrice.total.text) * 0.01),\n      cabinType: offer.offerItem.fareDetail.fareComponent[0].fareBasis.cabinType.cabinTypeName.includes(\"COACH\") ? \"Coach Economy\" : \"First Class\",\n      offerID: offer.offerID,\n      offerItemID: offer.offerItem.offerItemID\n    };\n    /*for(let t of offer.offerItem.fareDetail.price.taxes.breakdown.tax) {\n      t.amount.text =(Number(t.amount.text) * 0.01)\n    }\n    let flightFare = {\n      totalPrice: (Number(offer.offerItem.totalPriceDetail.totalAmount.detailCurrencyPrice.total.text) * 0.01),\n      priceCode: Number(offer.offerItem.totalPriceDetail.totalAmount.detailCurrencyPrice.total.code),\n      cabinType: offer.offerItem.fareDetail.fareComponent[0].fareBasis.cabinType.cabinTypeName.includes(\"COACH\") ? \"Coach Economy\" : \"First Class\",\n      offerID: offer.offerID,\n      offerItemID: offer.offerItem.offerItemID,\n      baseAmount: (Number(offer.offerItem.fareDetail.price.baseAmount.text) * 0.01),\n      tax: offer.offerItem.fareDetail.price.taxes.breakdown.tax\n    };*/\n    return flightFare;\n  }\n  \n  createFinalizedOffers(offer) {\n    let finalizedOffers = [];\n    for (let flightsPlusSegment of offer.flightsPlusSegments) {\n      let flightSegments = flightsPlusSegment.flightSegments.map(segment => {\n        return {\n          railID: segment.flightSegment.marketingCarrier.railID,\n          flightNumber: segment.flightSegment.marketingCarrier.flightNumber,\n          aircraftName: segment.flightSegment.equipment.name,\n          departureAirportCode: segment.flightSegment.departure.airportCode,\n          arrivalAirportCode: segment.flightSegment.arrival.airportCode,\n\n          departureDate: segment.flightSegment.departure.date,\n          departureTime: segment.flightSegment.departure.time,\n          departureAirportName: segment.flightSegment.departure.airportName,\n          departureTerminal: segment.flightSegment.departure.terminal,\n          arrivalDate: segment.flightSegment.arrival.date,\n          arrivalTime: segment.flightSegment.arrival.time,\n          arrivalAirportName: segment.flightSegment.arrival.airportName,\n          arrivalTerminal: segment.flightSegment.arrival.terminal,\n          railName: segment.flightSegment.marketingCarrier.name\n        }\n      });\n      let flightFareOld = {\n        totalPrice: (Number(offer.totalPrice.detailCurrencyPrice.total.text) * 0.01),\n        cabinType: offer.offerItem.fareDetail.fareComponent[0].fareBasis.cabinType.cabinTypeName.includes(\"COACH\") ? \"Coach Economy\" : \"First Class\",\n        offerID: offer.offerID,\n        offerItemID: offer.offerItem.offerItemID\n      };\n      let flightFare = {\n        totalPrice: (Number(offer.totalPrice.detailCurrencyPrice.total.text) * 0.01),\n        cabinType: offer.offerItem.fareDetail.fareComponent[0].fareBasis.cabinType.cabinTypeName.includes(\"COACH\") ? \"Coach Economy\" : \"First Class\",\n        offerID: offer.offerID,\n        offerItemID: offer.offerItem.offerItemID,\n        baseAmount: (Number(offer.offerItem.fareDetail.price.baseAmount.text) * 0.01),\n        tax: offer.offerItem.fareDetail.price.taxes.breakdown.tax\n      };\n      let flightFares = [];\n      flightFares.push(flightFare);\n      let finalizedOffer = {\n        flightKey: flightsPlusSegment.flight.flightKey,\n        shoppingResponseID: this.props.flightSearchResult.shoppingResponseID,\n        departureAirportCode: flightsPlusSegment.flight.segmentReferences.onPoint,\n        arrivalAirportCode: flightsPlusSegment.flight.segmentReferences.offPoint,\n        departureTime: flightsPlusSegment.flightSegments[0].flightSegment.departure.time,\n        arrivalTime: flightsPlusSegment.flightSegments.length > 1 ? \n          flightsPlusSegment.flightSegments[flightsPlusSegment.flightSegments.length-1].flightSegment.arrival.time : \n          flightsPlusSegment.flightSegments[0].flightSegment.arrival.time,\n        flightDuration: `${flightsPlusSegment.flight.journey.time.substring(2,5)} ${flightsPlusSegment.flight.journey.time.substring(5)}`,\n        numberOfStops: flightsPlusSegment.flightSegments.length === 1 ? \"Nonstop\" : `${flightsPlusSegment.flightSegments.length-1} Stop(s)`,\n        flightSegments: flightSegments,\n        flightFares: flightFares,\n\n\n        \n        departureAirportName: flightsPlusSegment.flightSegments[0].flightSegment.departure.airportName,\n        arrivalAirportName: flightsPlusSegment.flightSegments[flightsPlusSegment.flightSegments.length-1].flightSegment.arrival.airportName\n      };\n      finalizedOffers.push(finalizedOffer);\n    }\n    if (finalizedOffers.length > 1) {\n      return {\n        departureFlight: finalizedOffers[0],\n        returnFlight: finalizedOffers[1]\n      };\n    } else {\n      return {\n        departureFlight: finalizedOffers[0]\n      }\n    }\n  }\n \n}\n","<div *ngIf=\"isLoading\">\r\n    <mat-spinner class=\"spinner\" [diameter]=\"30\"></mat-spinner>\r\n</div>\r\n<!--begin:: ONE Row-->\r\n<div *ngIf=\"!isLoading && this.radioSelected == 'one'\" class=\"row gutter-b mt-5\">\r\n    <div class=\"col-12\">\r\n        <!--begin::Card-->\r\n        <div class=\"card card-custom mb-3\" *ngFor=\"let flight of flightList\">\r\n            <div class=\"card-body p-0\">\r\n                <div class=\"d-flex align-items-center flex-wrap p-5\" [ngClass]=\"flight.selected ? 'border-solid border-2 border-success rounded' : ''\">\r\n                    <div class=\"d-flex align-items-center flex-lg-fill w-35\">\r\n                        <div class=\"symbol symbol-50 bg-gray-300 mr-4\">\r\n                             <img (error) =\"onImgError($event)\" [src]=\"getImageName(flight.departureFlight.flightSegments[0].railID)\" alt=\"image\" />\r\n                        </div>\r\n                        <div class=\"d-flex flex-column flex-wrap\">\r\n                            <h5 class=\"mb-1\">{{flight.departureFlight.flightSegments[0].railName}}</h5>\r\n                            <div class=\"d-flex\">\r\n                                <span class=\"text-dark-50 font-weight-bold mr-2\">{{flight.departureFlight.flightSegments[0].railID + flight.departureFlight.flightSegments[0].flightNumber}}</span>\r\n                                <span class=\"text-dark-50 font-weight-bold mr-2\">|</span>\r\n                                <span class=\"text-dark-50 font-weight-bold mr-2 text-truncate\">{{flight.departureFlight.flightSegments[0].aircraftName}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"d-flex align-items-center flex-lg-fill w-35\">\r\n                        <div class=\"d-flex flex-column flex-wrap align-items-end\">\r\n                            <h2 class=\"mb-1\"> {{ flight.departureFlight.departureTime }}</h2>\r\n                            <span class=\"text-dark-50 font-weight-bold\"> {{ flight.departureFlight.departureAirportCode }}</span>\r\n                        </div>\r\n                        <div [appTooltip]=\"flight.departureFlight\" class=\"d-flex flex-column flex-wrap align-items-center min-w-150px pl-2 pr-2\">\r\n                            <div class=\"hr-text mb-2 text-dark-50\">{{ flight.departureFlight.flightDuration }}</div>\r\n                            <div *ngIf=\"flight.departureFlight.isPopUp\" id=\"popover\" class=\"popover fade show bs-popover-bottom\" style=\"top: 65px; left: auto;\" role=\"tooltip\" x-placement=\"bottom\">                \r\n                                <div class=\"arrow\" style=\"bottom: -7px; left: 45%;\"></div>\r\n                                <div class=\"popover-body font-size-lg text-center\">{{flight.departureFlight.popUpMessage}}</div>            \r\n                            </div>\r\n                            <span class=\"text-primary font-weight-bold\">{{ flight.departureFlight.numberOfStops }}</span>\r\n                        </div>\r\n                        <div class=\"d-flex flex-column flex-wrap\">\r\n                            <h2 class=\"mb-1\"> {{ flight.departureFlight.arrivalTime }}</h2>\r\n                            <span class=\"text-dark-50 font-weight-bold\"> {{ flight.departureFlight.arrivalAirportCode }}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"d-flex align-items-right\">\r\n                        <h1 class=\"pt-3 mr-4\">${{ getFare(flight.departureFlight.flightFares) | number : '1.2-2' }}</h1>\r\n                        <a (click)=\"toggleFare(flight.departureFlight)\" class=\"btn btn-outline-primary font-weight-bold font-size-h4\">\r\n                            {{ (!flight.departureFlight.showPrices ? \"Show\" : \"Hide\") + \" Prices\" }} <i class=\"fas\" [ngClass]=\"!flight.departureFlight.showPrices ? 'fa-chevron-down' : 'fa-chevron-up'\"></i>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\t\t\t\t\t\t\t\t\t\t\r\n            <div class=\"separator separator-dashed border-secondary\" *ngIf=\"flight.departureFlight.showPrices\"></div>\r\n            <!--begin::Items-->\r\n            <div class=\"d-flex justify-content-end flex-wrap\" [@collapse]=\"!flight.departureFlight.showPrices\">\r\n                <div *ngFor=\"let flightFare of flight.departureFlight.flightFares\">\r\n                    <div\r\n                    class=\"d-flex bgLightyellow cursor-pointer text-center pl-5 pr-5 pt-3 pb-3\"\r\n                    [ngClass]=\"flightFare.selectedFare == true ? 'bg-primary text-white' : 'bg-hover-primary text-hover-white'\"\r\n                    (click)=\"selectFare(flight, flightFare)\">\r\n                        <div class=\"d-flex flex-column\">\r\n                            <span class=\"font-weight-bold opacity-60\">{{flightFare.cabinType}}</span>\r\n                            <span class=\"font-size-h2\">${{ flightFare.totalPrice | number : '1.2-2' }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!--end::Items-->\r\n        </div>\r\n        <!--end::Card-->\r\n    </div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n</div>\r\n<!--end:: ONE Row-->\r\n\r\n<!--begin:: ONE Total-->\r\n<div class=\"colorBlock\" *ngIf=\"!isLoading && this.radioSelected == 'one' && selectedFlight != null\">\r\n    <div class=\"d-flex align-items-center flex-wrap p-3\">\r\n        <div class=\"d-flex align-items-center flex-lg-fill\">\r\n            <div class=\"symbol symbol-50 bg-white-o-30 mr-4\">\r\n                 <img (error) =\"onImgError($event)\" [src]=\"getImageName(selectedFlight.departureFlight.flightSegments[0].railID)\" alt=\"image\" />\r\n            </div>\r\n            <div class=\"d-flex flex-column flex-wrap\">\r\n                <h5 class=\"mb-1\">{{selectedFlight.departureFlight.flightSegments[0].railName}}</h5>\r\n                <div class=\"d-flex\">\r\n                    <span class=\"text-white-50 font-weight-bold mr-2\">{{selectedFlight.departureFlight.flightSegments[0].railID + selectedFlight.departureFlight.flightSegments[0].flightNumber}}</span>\r\n                    <span class=\"text-white-50 font-weight-bold mr-2\">|</span>\r\n                    <span class=\"text-white-50 font-weight-bold mr-2\">{{selectedFlight.departureFlight.flightSegments[0].aircraftName}}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"d-flex align-items-center flex-lg-fill\">\r\n            <div class=\"d-flex flex-column flex-wrap align-items-end\">\r\n                <h5 class=\"mb-1\">{{ selectedFlight.departureFlight.departureTime }}</h5>\r\n                <span class=\"text-white-50 font-weight-bold\">{{ selectedFlight.departureFlight.departureAirportCode }}</span>\r\n            </div>\r\n            <div class=\"d-flex flex-column flex-wrap align-items-center pl-2 pr-2\">\r\n                <h5 class=\"mb-1\">-</h5>\r\n                <span class=\"text-primary font-weight-bold\">-</span>\r\n            </div>\r\n            <div class=\"d-flex flex-column flex-wrap\">\r\n                <h5 class=\"mb-1\">{{ selectedFlight.departureFlight.arrivalTime }}</h5>\r\n                <span class=\"text-white-50 font-weight-bold\"> {{ selectedFlight.departureFlight.arrivalAirportCode }}</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"d-flex align-items-right\">\r\n            <h1 class=\"pt-3 mr-4\">${{ getFare(selectedFlight.departureFlight.flightFares) | number : '1.2-2' }}</h1>\r\n            <a (click)=\"bookNow()\" class=\"btn btn-outline-primary font-weight-bold font-size-h4 bg-white text-dark-75\">\r\n                Book Now\r\n            </a>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--end:: ONE Total-->\r\n\r\n\r\n<!--begin:: ROUND Row-->\r\n<div class=\"row gutter-b mt-5\" *ngIf=\"!isLoading && this.radioSelected == 'round'\">\r\n    <div class=\"col-12\">\r\n        <!--begin::Card-->\r\n        <div class=\"card card-custom mb-3\" *ngFor=\"let flight of flightList\">\r\n            <div class=\"card-body p-0\">\r\n                <div class=\"d-flex align-items-center flex-wrap\"  [ngClass]=\"flight.selected ? 'border-solid border-2 border-success rounded' : ''\">\r\n                    <div class=\"d-flex flex-column flex-fill\">\r\n                        <div class=\"d-flex flex-fill pt-4 pl-5\">\r\n                            <div class=\"d-flex align-items-center w-450px\">\r\n                                <div class=\"symbol symbol-50 bg-gray-300 mr-4\">\r\n                                     <img (error) =\"onImgError($event)\" [src]=\"getImageName(flight.departureFlight.flightSegments[0].railID)\" alt=\"image\" />\r\n                                </div>\r\n                                <div class=\"d-flex flex-column flex-wrap\">\r\n                                    <h5 class=\"mb-1\">{{flight.departureFlight.flightSegments[0].railName}}</h5>\r\n                                    <div class=\"d-flex\">\r\n                                        <span class=\"text-dark-50 font-weight-bold mr-2\">{{flight.departureFlight.flightSegments[0].railID + flight.departureFlight.flightSegments[0].flightNumber}}</span>\r\n                                        <span class=\"text-dark-50 font-weight-bold mr-2\">|</span>\r\n                                        <span class=\"text-dark-50 font-weight-bold mr-2\">{{flight.departureFlight.flightSegments[0].aircraftName}}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"d-flex align-items-center flex-lg-fill\">\r\n                                <div class=\"d-flex flex-column flex-wrap align-items-end\">\r\n                                    <h2 class=\"mb-1\">{{ flight.departureFlight.departureTime }}</h2>\r\n                                    <span class=\"text-dark-50 font-weight-bold\">{{ flight.departureFlight.departureAirportCode }}</span>\r\n                                </div>\r\n                                <div [appTooltip]=\"flight.departureFlight\" class=\"d-flex flex-column flex-wrap align-items-center min-w-150px pl-2 pr-2\">\r\n                                    <div class=\"hr-text mb-2 text-dark-50\">{{ flight.departureFlight.flightDuration }}</div>\r\n                                    <div *ngIf=\"flight.departureFlight.isPopUp\" id=\"popover2\" class=\"popover fade show bs-popover-bottom\" style=\"top: 65px; left: auto;\" role=\"tooltip\" x-placement=\"bottom\">                \r\n                                        <div class=\"arrow\" style=\"bottom: -7px; left: 45%;\"></div>\r\n                                        <div class=\"popover-body font-size-lg text-center\">{{flight.departureFlight.popUpMessage}}</div>            \r\n                                    </div>\r\n                                    <span class=\"text-primary font-weight-bold\">{{ flight.departureFlight.numberOfStops }}</span>\r\n                                </div>\r\n                                <div class=\"d-flex flex-column flex-wrap\">\r\n                                    <h2 class=\"mb-1\">{{ flight.departureFlight.arrivalTime }}</h2>\r\n                                    <span class=\"text-dark-50 font-weight-bold\">{{ flight.departureFlight.arrivalAirportCode }}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr class=\"w-100\">\r\n                        <div class=\"d-flex flex-fill pb-4 pl-5\">\r\n                            <div class=\"d-flex align-items-center w-450px\">\r\n                                <div class=\"symbol symbol-50 bg-gray-300 mr-4\">\r\n                                     <img (error) =\"onImgError($event)\" [src]=\"getImageName(flight.returnFlight.flightSegments[0].railID)\" alt=\"image\" />\r\n                                </div>\r\n                                <div class=\"d-flex flex-column flex-wrap\">\r\n                                    <h5 class=\"mb-1\">{{flight.returnFlight.flightSegments[0].railName }}</h5>\r\n                                    <div class=\"d-flex\">\r\n                                        <span class=\"text-dark-50 font-weight-bold mr-2\">{{flight.returnFlight.flightSegments[0].railID + flight.returnFlight.flightSegments[0].flightNumber}}</span>\r\n                                        <span class=\"text-dark-50 font-weight-bold mr-2\">|</span>\r\n                                        <span class=\"text-dark-50 font-weight-bold mr-2\">{{flight.returnFlight.flightSegments[0].aircraftName}}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"d-flex align-items-center flex-lg-fill\">\r\n                                <div class=\"d-flex flex-column flex-wrap align-items-end\">\r\n                                    <h2 class=\"mb-1\">{{ flight.returnFlight.departureTime }}</h2>\r\n                                    <span class=\"text-dark-50 font-weight-bold\">{{ flight.returnFlight.departureAirportCode }}</span>\r\n                                </div>\r\n                                <div [appTooltip]=\"flight.returnFlight\" class=\"d-flex flex-column flex-wrap align-items-center min-w-150px pl-2 pr-2\">\r\n                                    <div class=\"hr-text mb-2 text-dark-50\">{{ flight.returnFlight.flightDuration }}</div>\r\n                                    <div *ngIf=\"flight.returnFlight.isPopUp\" id=\"popover3\" class=\"popover fade show bs-popover-bottom\" style=\"top: 140px; left: auto;\" role=\"tooltip\" x-placement=\"bottom\">                \r\n                                        <div class=\"arrow\" style=\"bottom: -7px; left: 45%;\"></div>\r\n                                        <div class=\"popover-body font-size-lg text-center\">{{flight.returnFlight.popUpMessage}}</div>            \r\n                                    </div>\r\n                                    <span class=\"text-primary font-weight-bold\">{{ flight.returnFlight.numberOfStops }}</span>\r\n                                </div>\r\n                                <div class=\"d-flex flex-column flex-wrap\">\r\n                                    <h2 class=\"mb-1\">{{ flight.returnFlight.arrivalTime }}</h2>\r\n                                    <span class=\"text-dark-50 font-weight-bold\">{{ flight.returnFlight.arrivalAirportCode }}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"hrVertical h-150px\"></div>\r\n                    <div class=\"d-flex align-items-right pl-5 pr-5\">\r\n                        <h1 class=\"pt-3 mr-4\">${{ getFare(flight.departureFlight.flightFares) | number : '1.2-2' }}</h1>\r\n                        <a (click)=\"toggleFare(flight.departureFlight)\" class=\"btn btn-outline-primary font-weight-bold font-size-h4\">\r\n                            {{ (!flight.departureFlight.showPrices ? \"Show\" : \"Hide\") + \" Prices\" }} <i class=\"fas\" [ngClass]=\"!flight.departureFlight.showPrices ? 'fa-chevron-down' : 'fa-chevron-up'\"></i>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"separator separator-dashed border-secondary\" *ngIf=\"flight.departureFlight.showPrices\"></div>\r\n            <!--begin::Items-->\r\n            <div class=\"d-flex justify-content-end flex-wrap\" [@collapse]=\"!flight.departureFlight.showPrices\">\r\n                <div *ngFor=\"let flightFare of flight.departureFlight.flightFares\">\r\n                    <div\r\n                    class=\"d-flex bgLightyellow cursor-pointer text-center pl-5 pr-5 pt-3 pb-3\"\r\n                    [ngClass]=\"flightFare.selectedFare == true ? 'bg-primary text-white' : 'bg-hover-primary text-hover-white'\" \r\n                    (click)=\"selectFare(flight, flightFare)\">\r\n                        <div class=\"d-flex flex-column\">\r\n                            <span class=\"font-weight-bold opacity-60\">{{flightFare.cabinType}}</span>\r\n                            <span class=\"font-size-h2\">${{ flightFare.totalPrice | number : '1.2-2' }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!--end::Items-->\r\n        </div>\r\n        <!--end::Card-->\r\n    </div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n</div>\r\n<!--end:: ROUND Row-->\r\n\r\n<!--begin:: ROUND Total-->\r\n<div class=\"colorBlock\" *ngIf=\"!isLoading && this.radioSelected == 'round' && selectedFlight != null\">\r\n    <div class=\"d-flex align-items-center flex-wrap p-3\">\r\n        <div class=\"d-flex flex-fill\">\r\n            <div class=\"d-flex flex-row flex-fill\">\r\n                <div class=\"d-flex align-items-center flex-lg-fill\">\r\n                    <div class=\"symbol symbol-50 bg-white-o-30 mr-4\">\r\n                         <img (error) =\"onImgError($event)\" [src]=\"getImageName(selectedFlight.departureFlight.flightSegments[0].railID)\" alt=\"image\" />\r\n                    </div>\r\n                    <div class=\"d-flex flex-column flex-wrap\">\r\n                        <h5 class=\"mb-1\">{{selectedFlight.departureFlight.flightSegments[0].railName}}</h5>\r\n                        <div class=\"d-flex\">\r\n                            <span class=\"text-white-50 font-weight-bold mr-2\">{{selectedFlight.departureFlight.flightSegments[0].railID + selectedFlight.departureFlight.flightSegments[0].flightNumber}}</span>\r\n                            <span class=\"text-white-50 font-weight-bold mr-2\">|</span>\r\n                            <span class=\"text-white-50 font-weight-bold mr-2\">{{selectedFlight.departureFlight.flightSegments[0].aircraftName}}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-flex align-items-center flex-lg-fill\">\r\n                    <div class=\"d-flex flex-column flex-wrap align-items-end\">\r\n                        <h5 class=\"mb-1\">{{ selectedFlight.departureFlight.departureTime }}</h5>\r\n                        <span class=\"text-white-50 font-weight-bold\">{{ selectedFlight.departureFlight.departureAirportCode }}</span>\r\n                    </div>\r\n                    <div class=\"d-flex flex-column flex-wrap align-items-center pl-2 pr-2\">\r\n                        <h5 class=\"mb-1\">-</h5>\r\n                        <span class=\"text-primary font-weight-bold\">-</span>\r\n                    </div>\r\n                    <div class=\"d-flex flex-column flex-wrap\">\r\n                        <h5 class=\"mb-1\">{{ selectedFlight.departureFlight.arrivalTime }}</h5>\r\n                        <span class=\"text-white-50 font-weight-bold\"> {{ selectedFlight.departureFlight.arrivalAirportCode }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"hrVerticalLight mr-5 h-50px\"></div>\r\n            <div class=\"d-flex flex-row flex-fill\">\r\n                <div class=\"d-flex align-items-center flex-lg-fill\">\r\n                    <div class=\"symbol symbol-50 bg-white-o-30 mr-4\">\r\n                         <img (error) =\"onImgError($event)\" [src]=\"getImageName(selectedFlight.returnFlight.flightSegments[0].railID)\"/>\r\n                    </div>\r\n                    <div class=\"d-flex flex-column flex-wrap\">\r\n                        <h5 class=\"mb-1\">{{selectedFlight.returnFlight.flightSegments[0].railName}}</h5>\r\n                        <div class=\"d-flex\">\r\n                            <span class=\"text-white-50 font-weight-bold mr-2\">{{selectedFlight.returnFlight.flightSegments[0].railID + selectedFlight.returnFlight.flightSegments[0].flightNumber}}</span>\r\n                            <span class=\"text-white-50 font-weight-bold mr-2\">|</span>\r\n                            <span class=\"text-white-50 font-weight-bold mr-2\">{{selectedFlight.returnFlight.flightSegments[0].aircraftName}}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-flex align-items-center flex-lg-fill\">\r\n                    <div class=\"d-flex flex-column flex-wrap align-items-end\">\r\n                        <h5 class=\"mb-1\">{{ selectedFlight.returnFlight.departureTime }}</h5>\r\n                        <span class=\"text-white-50 font-weight-bold\">{{ selectedFlight.returnFlight.departureAirportCode }}</span>\r\n                    </div>\r\n                    <div class=\"d-flex flex-column flex-wrap align-items-center pl-2 pr-2\">\r\n                        <h5 class=\"mb-1\">-</h5>\r\n                        <span class=\"text-primary font-weight-bold\">-</span>\r\n                    </div>\r\n                    <div class=\"d-flex flex-column flex-wrap\">\r\n                        <h5 class=\"mb-1\">{{ selectedFlight.returnFlight.arrivalTime }}</h5>\r\n                        <span class=\"text-white-50 font-weight-bold\"> {{ selectedFlight.returnFlight.arrivalAirportCode }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"hrVerticalLight mr-5 h-50px\"></div>\r\n        </div>\t\t\t\t\t\t\t\r\n        <div class=\"d-flex align-items-right\">\r\n            <h1 class=\"pt-3 mr-4\">${{ getFare(selectedFlight.departureFlight.flightFares) | number : '1.2-2' }}</h1>\r\n            <a (click)=\"bookNow()\" class=\"btn btn-outline-primary font-weight-bold font-size-h4 bg-white text-dark-75\">\r\n                Book Now\r\n            </a>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--end:: ROUND Total-->","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { RailComponent } from './rail.component';\nimport { RailDashboardComponent } from './rail-dashboard/rail-dashboard.component';\nimport { RailSubheaderComponent } from './rail-dashboard/rail-subheader/rail-subheader.component';\nimport { RailListComponent } from './rail-search/rail-list/rail-list.component';\nimport { RailViewComponent } from './rail-view/rail-view.component';\nimport { RailItemComponent } from './rail-search/rail-list/rail-item/rail-item.component';\nimport { RailSearchComponent } from './rail-search/rail-search.component';;\nimport { PageNotFoundComponent } from '../page-not-found/page-not-found.component';\nimport { AngularMaterialModule } from '../../../material.module';\nimport { RailCreateOrderComponent } from './rail-create-order/rail-create-order.component';\nimport { RailOrdersComponent } from './rail-orders/rail-orders.component';\nimport { RailOrderComponent } from './rail-order/rail-order.component';\nimport { RailOrderStatusComponent } from './rail-order-status/rail-order-status.component';\n\nconst secondaryRoutes: Routes = [\n  {\n    path: '',\n    component: RailComponent,\n    children: [\n      {\n        path: '', component: RailDashboardComponent\n      },\n      {\n        path: 'Search', component: RailSearchComponent\n      },\n      {\n        path: 'Booking', component: RailCreateOrderComponent\n      },\n      {\n        path: 'Orders', component: RailOrdersComponent\n      },\n      {\n        path: 'Orders/:id', component: RailOrderComponent\n      },\n      {\n        path: 'Status', component: RailOrderStatusComponent\n      },\n      {\n        path: 'Status/:id', component: RailOrderStatusComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [\n    RailComponent, RailDashboardComponent, RailSubheaderComponent, RailListComponent, \n    RailViewComponent, RailItemComponent, RailSearchComponent, RailCreateOrderComponent, \n    RailOrdersComponent, RailOrderComponent, RailOrderStatusComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    AngularMaterialModule,\n    RouterModule.forChild(secondaryRoutes)\n  ],\n  entryComponents: [RailListComponent],\n})\nexport class RailModule { }\n","import { Injectable } from '@angular/core';\nimport { config } from '../../../../shared/config';\nimport { LoginService } from '../../auth/login/login.service';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { environment } from '../../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RailViewService {\n\nconstructor(private httpClient: HttpClient, private loginService: LoginService) { }\n\n  getRailByID(codeVersion, skipACL=false) {\n    const userinfo = this.loginService.getUserSession();\n    return this.httpClient.post( environment.railApiEndpoint + 'railing/railByID', {user: userinfo.userCode, objectCode: codeVersion, skipACL: skipACL});\n  }\n\n  railSave(rail: any) {\n    const userinfo = this.loginService.getUserSession();\n    let reqbody = {\n      user: userinfo.userCode,\n      objectCode: rail.objectCode,\n      version: rail.version,\n      saveMode: '0',\n      Railing: rail\n    };\n    return this.httpClient.post( environment.railApiEndpoint +  'railing/save', reqbody);\n  }\n\n  searchRails(railQuery) {\n    return this.httpClient.post( environment.railApiEndpoint +  'railing/search', railQuery).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  getObjectList(){\n    return this.httpClient.get( environment.railApiEndpoint +  'railing/objectList').pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  searchProperties(propertyQuery) {\n    return this.httpClient.post( environment.railApiEndpoint +  'property/search', propertyQuery).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  handleError(error) {\n    let errorMessage = {};\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      errorMessage = {code:'-1', Error: `${error.error.message}`};\n    } else {\n      // server-side error\n      errorMessage = {code:'-1', status: error.status, Error: error.message};\n\n    }\n    //window.alert(errorMessage);\n    console.log(error)\n    return throwError(errorMessage);\n  }\n}\n","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RailViewService } from './rail-view.service';\nimport { Rail } from '../rail';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { LoginService } from '../../auth/login/login.service';\n\nconst railJson = {\n  _id: '',\n  objectCode: '',\n  name: '',\n  description: '',\n  railingType: '',\n  deleteMark: 0,\n  isActive: 1,\n  changeCount: 0,\n  acl : [],\n  railingCodes : [],\n  objectLinks: []\n};\n\n@Component({\n  selector: 'app-rail-view',\n  templateUrl: './rail-view.component.html',\n  styleUrls: ['./rail-view.component.css']\n})\nexport class RailViewComponent extends Rail implements OnInit {\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute,\n    private railViewService: RailViewService, private _snackBar: MatSnackBar, loginService: LoginService) {\n    super(loginService);\n  }\n\n  ngOnInit() {\n  }\n}","import { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { LoginService } from '../../auth/login/login.service';\nimport { Rail } from '../rail';\nimport { LocalStorage } from '../../../../shared/storage/local-storage';\nimport { RailOrderService } from '../rail-order.service';\nimport { DialogComponent } from '../../../../shared/dialog/dialog.component';\nimport { DialogService } from '../../../../shared/dialog/dialog.service';\n\n@Component({\n  selector: 'app-rail-order',\n  templateUrl: './rail-order.component.html',\n  styleUrls: ['./rail-order.component.css']\n})\nexport class RailOrderComponent extends Rail implements OnInit, AfterViewInit {\n\n  public isSubmitted = false;\n  public isLoading = false;\n  public order = {\n    flightSegment: [],\n    passengerList: [],\n    contactList: []\n  };\n  public orderId;\n  public flightSegmentList = [];\n\n  displayedColumns: string[] = ['Index', 'Name', 'Gender', 'DOB'];\n  @ViewChild('appDialog') appDialog: DialogComponent;\n  \n  constructor(private router: Router, loginService: LoginService, private localStorage: LocalStorage,\n    private railOrderService: RailOrderService, private _snackBar: MatSnackBar,\n    private activatedRoute: ActivatedRoute, private dialogService: DialogService,\n    private cdRef: ChangeDetectorRef) { \n    super(loginService);\n    document.body.style.backgroundSize = \"100% 165px\";\n    this.activatedRoute.params.subscribe(params => {\n      this.orderId = params.id;\n      //this.ngOnInit();\n    });\n  }\n\n  ngOnInit(): void {\n    if(this.orderId != null){\n      this.isLoading = true;\n      this.railOrderService.gerOrderById(this.orderId).subscribe((data: any) => {\n        // console.log('gerOrderByName');\n        // console.log(data);\n        this.isLoading = false;      \n        this.order = this.getOrderData(data, this.order);\n      });     \n    }\n  } \n\n  public ngAfterViewInit(): void {\n    this.dialogService.register(this.appDialog, \"Alert\", \"Do you want to cancel the order?\");\n    this.cdRef.detectChanges();\n  }\n  \n  showDialog() {\n    this.dialogService.show()\n      .then((res) => {\n        console.log('ok clicked');\n        this.cancelOrder();\n      })\n      .catch((err) => {\n        console.log('cancel clicked');\n      });\n  }\n\n  public cancelOrder() {\n    this.isLoading = true;  \n    this.railOrderService.cancelOrderById(this.orderId).subscribe((data: any) => {\n      // console.log('gerOrderByName');\n      // console.log(data);\n      this.isLoading = false;  \n      this.order = {\n        flightSegment: [],\n        passengerList: [],\n        contactList: []\n      };    \n      this.order = this.getOrderData(data, this.order);\n    }); \n  }\n}\n","<div *ngIf=\"isLoading\">\n    <mat-spinner class=\"spinner\" [diameter]=\"30\"></mat-spinner>\n</div>\n<div *ngIf=\"!isLoading && order.flightSegment.length == 0\">\n    <div class=\"content d-flex flex-column flex-column-fluid pt-0\" id=\"lr_content\">\n        <!--begin::Entry-->\n        <div class=\"d-flex flex-column-fluid borderHeader\">\n            <!--begin::Container-->\n            <div class=\"container\">\n                <!--begin::Dashboard-->\n                <!--begin::Row-->\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"brdSmallBlock gutter-b d-flex\">\n                            <div class=\"brdSmallBlock_inner pt-4 flex-column\">\n                                <h2 class=\"text-white pl-2\"><span class=\"opacity-70\">Order Id: </span>{{orderId}}</h2>\n                                <h6 class=\"text-white-50 pl-2\">Your Ticket has been cancelled  <i class=\"fas fa-times-circle text-danger icon-xl\"></i></h6>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!--end::Row-->\n                <!--begin::Details-->\n                <!-- <div class=\"gutter-b\">\n                    <div class=\"separator separator-solid\"></div>\n                    <table mat-table [dataSource]=\"order.passengerList\" class=\"mat-elevation-z8\">\n\n                        <ng-container matColumnDef=\"Index\">\n                          <th mat-header-cell *matHeaderCellDef> # </th>\n                          <td mat-cell *matCellDef=\"let element\"> {{element.index}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"Name\">\n                          <th mat-header-cell *matHeaderCellDef> Name </th>\n                          <td mat-cell *matCellDef=\"let element\"> {{ getName(element) }} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"Gender\">\n                            <th mat-header-cell *matHeaderCellDef> Gender </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.individual.gender}} </td>\n                          </ng-container>\n                      \n                        <ng-container matColumnDef=\"DOB\">\n                          <th mat-header-cell *matHeaderCellDef> DOB </th>\n                          <td mat-cell *matCellDef=\"let element\"> {{element.individual.birthdate}} </td>\n                        </ng-container>\n                                                   \n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                    </table>\n                </div> -->\n                <!--end::Details-->\n                <!--end::Dashboard-->\n            </div>\n            <!--end::Container-->\n        </div>\n        <!--end::Entry-->\n    </div>\n    <!--end::Content-->\n</div>\n\n<div *ngIf=\"!isLoading && orderId != null && order.flightSegment.length > 0\">\n    <!--begin::Content-->\n    <div class=\"content d-flex flex-column flex-column-fluid pt-0\" id=\"lr_content\">\n        <!--begin::Entry-->\n        <div class=\"d-flex flex-column-fluid borderHeader\">\n            <!--begin::Container-->\n            <div class=\"container\">\n                <!--begin::Dashboard-->\n                <!--begin::Row-->\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"brdSmallBlock gutter-b d-flex\">\n                            <div class=\"brdSmallBlock_inner pt-4 flex-column\">\n                                <h2 class=\"text-white pl-2\"><span class=\"opacity-70\">Order Id: </span>{{orderId}}</h2>\n                                <h6 class=\"text-white-50 pl-2\">Your Ticket has been confirmed  <i class=\"fas fa-check-circle text-success icon-xl\"></i></h6>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!--end::Row-->\n                <!--begin::Details-->\n                <div class=\"gutter-b\">\n                    <div class=\"d-flex justify-content-end mb-3 mr-3\">\n                        <button (click)=\"showDialog()\" type=\"reset\" class=\"btn btn-primary\" title=\"Order Cancel\">Cancel</button>\n                    </div>\n                    <div class=\"card card-custom mb-3\" *ngFor=\"let flightSegment of order.flightSegment\">\n                        <div class=\"card-body p-0\">\n                            <!--begin::Top-->\n                            <div class=\"d-flex align-items-start flex-wrap p-5\">\n                                <div class=\"col-5 d-flex align-items-center flex-lg-fill pl-0\">\n                                    <div class=\"symbol symbol-50 bg-gray-300 mr-4\">\n                                        <img (error) =\"onImgError($event)\" [src]=\"getImageName(flightSegment.marketingCarrier.railID)\" alt=\"image\">\n                                    </div>\n                                    <div class=\"d-flex flex-column flex-wrap\">\n                                        <h5 class=\"mb-1\">{{flightSegment.marketingCarrier.name}}</h5>\n                                        <div class=\"d-flex\">\n                                            <span class=\"text-dark-50 font-weight-bold mr-2\"> {{flightSegment.marketingCarrier.railID +  flightSegment.marketingCarrier.flightNumber}}</span>\n                                            <span class=\"text-dark-50 font-weight-bold mr-2\">|</span>\n                                            <span class=\"text-dark-50 font-weight-bold mr-2\">{{flightSegment.equipment.name }}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-7 d-flex align-items-center justify-content-center flex-lg-fill pl-0\">\n                                    <div class=\"d-flex flex-column flex-wrap align-items-end\">\n                                        <h4 class=\"mb-1\">{{flightSegment.departure.time}}</h4>\n                                        <h6 class=\"opacity-70\">{{flightSegment.departure.date | date:'mediumDate'}}</h6>\n                                        <!-- <span class=\"text-dark-50 font-weight-bold\"> {{ flightSegment.departure.airportName + \"(\"+flightSegment.departure.airportCode+\")\" }}</span> -->\n                                        <span class=\"text-dark-50 font-weight-bold\"> {{ flightSegment.departure.airportCode }}</span>\n                                    </div>\n                                    <div class=\"d-flex flex-column flex-wrap align-items-center min-w-150px ml-3 mr-3\">\n                                        <div class=\"hr-text font-size-sm text-dark-50 mb-1\"> {{ getDuration(flightSegment.flightDetail.flightDuration.value) }}</div>\n                                        <span class=\"text-primary font-weight-bold mb-1\">{{ getStops(flightSegment.flightDetail.stops.stopQuantity) }}</span>\n                                        <span class=\"text-dark-65\">{{ getClass(flightSegment.classOfService.code) }}</span>\n                                    </div>\n                                    <div class=\"d-flex flex-column flex-wrap\">\n                                        <h4 class=\"mb-1\">{{flightSegment.arrival.time}}</h4>\n                                        <h6 class=\"opacity-70\">{{flightSegment.arrival.date | date:'mediumDate'}}</h6>\n                                        <!-- <span class=\"text-dark-50 font-weight-bold\">{{ flightSegment.arrival.airportName + \"(\"+flightSegment.arrival.airportCode+\")\" }}</span> -->\n                                        <span class=\"text-dark-50 font-weight-bold\">{{ flightSegment.arrival.airportCode }}</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <!--end::Top-->\n                            <!--begin::Separator-->\n                            <div class=\"separator separator-solid\"></div>\n                            <!--end::Separator-->\n                            <table mat-table [dataSource]=\"order.passengerList\" class=\"mat-elevation-z8\">\n\n                                <ng-container matColumnDef=\"Index\">\n                                  <th mat-header-cell *matHeaderCellDef> # </th>\n                                  <td mat-cell *matCellDef=\"let element\"> {{element.index}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"Name\">\n                                  <th mat-header-cell *matHeaderCellDef> Name </th>\n                                  <td mat-cell *matCellDef=\"let element\"> {{ getName(element) }} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"Gender\">\n                                    <th mat-header-cell *matHeaderCellDef> Gender </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element.individual.gender}} </td>\n                                  </ng-container>\n                              \n                                <ng-container matColumnDef=\"DOB\">\n                                  <th mat-header-cell *matHeaderCellDef> DOB </th>\n                                  <td mat-cell *matCellDef=\"let element\"> {{element.individual.birthdate}} </td>\n                                </ng-container>\n                                                           \n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                <!--end::Details-->\n                <!--end::Dashboard-->\n            </div>\n            <!--end::Container-->\n        </div>\n        <!--end::Entry-->\n    </div>\n    <!--end::Content-->\n</div>\n\n<app-dialog #appDialog></app-dialog>","import { Component, OnInit, ViewChild, OnDestroy, Renderer2, ElementRef, ViewChildren, AfterViewInit } from '@angular/core';\nimport { FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { debounceTime, distinct, filter, map, switchMap } from 'rxjs/operators';\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { of, Subject } from 'rxjs';\nimport { HttpClient  } from '@angular/common/http';\nimport { Select, Store } from '@ngxs/store';\nimport { Router } from '@angular/router';\n\nimport { RailRetrieveService } from '../rail-dashboard/rail-retrieve.service';\nimport { RailListComponent } from './rail-list/rail-list.component';\nimport { Rail } from '../rail';\nimport { LoginService } from '../../auth/login/login.service';\nimport { SetSearchCriteriaData } from '../../../../store/rail/rail.actions';\nimport { RailStateModule } from '../../../../store/rail/rail.state';\nimport { MyErrorStateMatcher, trip } from '../../../../shared/models/rail.model';\nimport { LocalStorage } from '../../../../shared/storage/local-storage';\n\n@Component({\n  selector: 'app-rail-search',\n  templateUrl: './rail-search.component.html',\n  styleUrls: ['./rail-search.component.css']\n})\n\nexport class RailSearchComponent extends Rail implements OnInit, AfterViewInit, OnDestroy {\n  public response = {};\n  public railData = {};\n  public railLoading = false;\n  public radioSelected : trip = \"one\";\n  public loadingLeavingFrom = false;\n  public loadingLeavingTo = false;\n\n  public minToDate = new Date();\n  public maxToDate = new Date(this.minToDate.getTime() +  1000 * 60 * 60 * 24 * 150);\n  public minFromDate = new Date();\n  public maxFromDate = new Date(this.minFromDate.getTime() +  1000 * 60 * 60 * 24 * 150);\n  \n  public filteredFromOptions: Observable<any[]>;\n  public filteredToOptions: Observable<any[]>;\n  errorMatcher = new MyErrorStateMatcher();\n\n  public tripType: trip[] = [ 'one', 'round'];\n\n  public searchFormGroup = new FormGroup({   \n    trip: new FormControl(this.tripType[0], Validators.required), \n    from: new FormControl(this.defaultFrom, Validators.required),\n    to: new FormControl(this.defaultTo, Validators.required),\n    start: new FormControl(new Date(), Validators.required),\n    end: new FormControl(new Date(), Validators.required),\n    count: new FormControl(1, Validators.required),\n    adults: new FormControl(1, Validators.required),\n    childrens: new FormControl(0, Validators.required),\n    infants: new FormControl(0, Validators.required)\n  }, {\n    validators: [ this.sameToFromValidator, this.sameStartEndValidator, this.toSelected, this.fromSelected]\n  });\n\n  public query = {};\n  public airPortList = [];\n  @ViewChild('picker1') private picker1;\n  @ViewChild('picker2') private picker2;\n  @ViewChild('travellersSelect') travellersSelect;\n  @ViewChild('tripSelect') tripSelect;\n  @ViewChild('fromDiv', { read: ElementRef, static: false }) fromDiv: ElementRef;\n  @ViewChild('toDiv', { read: ElementRef, static: false }) toDiv: ElementRef;\n  @ViewChild('countPopupDiv', { read: ElementRef, static: false }) countPopupDiv: ElementRef;\n  @ViewChild('travellersDiv', { read: ElementRef, static: false }) travellersDiv: ElementRef;\n  @ViewChildren('fromInput') fromInput;\n  @ViewChildren('toInput') toInput;\n  \n  public click = {\n    to: true,\n    from: true,\n    start: true,\n    end: true,\n    count: true,\n    trip: true\n  }\n  \n  @ViewChild('railListComponent', {static : false}) railListComponentRef: RailListComponent;\n  private docClickSubscription: any;\n  public isLoading = false;\n  public isSubmitted = false;\n  @Select(RailStateModule.getSearchCriteria) searchCriteria$: Observable<any>;\n  searchSubject: Subject<any> = new Subject<any>();\n\n  constructor(loginService: LoginService, private railRetrieveService: RailRetrieveService,\n         private renderer: Renderer2, private httpClient: HttpClient, private store: Store,\n         private router: Router, private localStorage: LocalStorage) {    \n    super(loginService);\n    document.body.style.backgroundSize = \"100% 165px\";\n    this.searchCriteria$.subscribe((searchCriteria) => { \n      if(searchCriteria != null){\n        this.updateFromGroup(searchCriteria);\n        this.localStorage.setItem('searchFormGroup', JSON.stringify(searchCriteria));\n      } else {\n        const searchCriteriaTxt = this.localStorage.getItem('searchFormGroup');\n        if(searchCriteriaTxt != null) {\n          let searchCriteriaJSON = JSON.parse(searchCriteriaTxt);\n          searchCriteriaJSON = this.checkDate(searchCriteriaJSON);\n          this.updateFromGroup(searchCriteriaJSON);\n        }\n      }\n    });\n  }\n  \n  ngOnInit() {\n    this.getAllAirportSearchService();\n    this.docClickSubscription = this.renderer.listen('document', 'click', this.onDocumentClick.bind(this));\n    this.filteredToOptions = this.searchFormGroup.get('to').valueChanges\n      .pipe(\n        debounceTime(500),\n        switchMap((railCode) => {\n          if(this.filter(railCode)){\n            return of([]);\n          } else {\n            this.loadingLeavingTo = true;\n            return this.serachAirportSearchService(railCode);\n          }\n      }));\n    this.filteredFromOptions = this.searchFormGroup.get('from').valueChanges\n      .pipe(\n        debounceTime(500),\n        switchMap((railCode) => {\n          if(this.filter(railCode)){\n            return of([]);\n          } else {\n            this.loadingLeavingFrom = true;\n            return this.serachAirportSearchService(railCode);\n          }\n      })); \n    /* this.filteredToOptions = this.searchFormGroup.get('to').valueChanges\n      .pipe(\n        switchMap((railCode) => {\n          if(railCode == '' || railCode == null ) {\n            return of(this.airPortList);\n          } else {\n            this.loadingLeavingTo = true;\n            return this.serachOfflineAirportSearch(railCode);\n          }\n      }));\n    this.filteredFromOptions = this.searchFormGroup.get('from').valueChanges\n      .pipe(\n        switchMap((railCode) => {\n          if(railCode == '' || railCode == null ) {\n            return of(this.airPortList);\n          } else {\n            this.loadingLeavingFrom = true;\n            return this.serachOfflineAirportSearch(railCode);\n          }\n      })); */\n       \n    this.searchFormGroup.get('start').valueChanges.subscribe(val => {\n      this.minFromDate = val;\n    });\n    this.searchFormGroup.get('end').valueChanges.subscribe(val => {\n    });\n  }\n\n  public ngAfterViewInit() {\n    // this.railListComponentRef.searchRail(this.getSearchQuery());\n    // console.log('ngAfterViewInit');\n    this.emitEventToRailList();\n  }\n\n  public ngOnDestroy() {\n    this.docClickSubscription();\n  }\n\n  checkDate(searchCriteriaJSON) {\n    const time = this.truncateTime(null);\n    let dateChange = false;\n    if(Date.parse(this.truncateTime(searchCriteriaJSON.start)) < Date.parse(time)) {\n      searchCriteriaJSON.start = time; \n      dateChange = true;\n    }\n    if(Date.parse(this.truncateTime(searchCriteriaJSON.end)) < Date.parse(time)) {\n      searchCriteriaJSON.end = time;\n      dateChange = true;\n    }\n    if(Date.parse(searchCriteriaJSON.end) < Date.parse(searchCriteriaJSON.start)) {\n      searchCriteriaJSON.start = searchCriteriaJSON.end;\n      dateChange = true;\n    }\n    if(dateChange) {\n      this.localStorage.setItem('searchFormGroup', JSON.stringify(searchCriteriaJSON));\n    }\n    return searchCriteriaJSON;\n  }\n\n  updateFromGroup(searchCriteria){\n    let json = this.searchFormGroup.value;\n    json = {\n      ...json,\n      ...searchCriteria\n    }\n    this.radioSelected = json.trip == \"round\"  ? \"round\" : \"one\";\n    if(this.radioSelected == 'one'){\n      this.searchFormGroup.get('end').disable();\n    }\n    this.searchFormGroup.patchValue(json);\n  }\n\n  emitEventToRailList() {\n    this.searchSubject.next(this.getSearchQuery());\n  }\n\n  private onDocumentClick(event: any): void {\n     console.log(event.target.className);\n     if (event.target.className.indexOf(\"mat-calendar-body-cell-content\") != -1) {\n      // console.log(\"mat-calendar clicks\");\n      this.startDateChange(null, null);   \n      this.endDateChange(null, null); \n    } else if (event.target.className.indexOf(\"mat-option-text\") != -1) {\n      // console.log(\"mat-option clicks\");\n      // has to uncomment after travel popup\n      this.countChange(null);  \n      this.tripChange(null); \n    } else if(event.target.className.indexOf(\"cdk-overlay-backdrop\") != -1) {\n      // console.log(\"overlay clicks\");\n      this.startDateChange(null, null);   \n      this.endDateChange(null, null); \n      // has to uncomment after travel popup\n      this.countChange(null);\n      this.tripChange(null);  \n    } else if(event.target.id == \"fromCity\"\n              || event.target.id == \"fromCityDiv\"\n              || this.fromDiv.nativeElement.contains(event.target)) {\n      // console.log(\"search_inputField from clicks\");\n      let json = this.searchFormGroup.value;\n      const fromValue = json.from;\n      json.from = '';\n      this.searchFormGroup.patchValue(json);\n      json.from = fromValue;\n      this.searchFormGroup.patchValue(json);   \n      this.fromInput.first.nativeElement.focus();\n      this.toChange(null);\n    } else if(event.target.id == \"toCity\"\n              || event.target.id == \"toCityDiv\"\n              || this.toDiv.nativeElement.contains(event.target)) {\n      // console.log(\"search_inputField to clicks\");\n      let json = this.searchFormGroup.value;\n      const toValue = json.to;\n      json.to = '';\n      this.searchFormGroup.patchValue(json);\n      json.to = toValue;\n      this.searchFormGroup.patchValue(json);  \n      this.toInput.first.nativeElement.focus();  \n      this.fromChange(null);   \n    } /*else if (event.target.className.indexOf(\"mat-option-text dismiss\") == -1) {\n      // console.log(\"mat-option-text dismiss clicks\");\n      this.fromChange(null);    \n      this.toChange(null);\n    } */ else if(!this.fromDiv.nativeElement.contains(event.target) || !this.toDiv.nativeElement.contains(event.target)) {\n      if(!this.fromDiv.nativeElement.contains(event.target)) {\n        // console.log(\"outside fromDiv\");\n        this.fromChange(null);    \n      }\n      if(!this.toDiv.nativeElement.contains(event.target)) {\n        // console.log(\"outside toDiv\");\n        this.toChange(null);\n      }   \n    }\n    \n    // has to uncomment after travel popup\n    /*if(this.countPopupDiv != null && (this.countPopupDiv.nativeElement.contains(event.target)\n       || event.target.className.indexOf(\"mat-option-text\") != -1) \n       || event.target.className.indexOf(\"search_inputField h2 count\") != -1\n       || event.target.className.indexOf(\"display6 count\") != -1\n       || this.travellersDiv.nativeElement.contains(event.target)) {\n      // console.log(\"inside countPopupDiv\");\n    } else {\n      // console.log(\"outside countPopupDiv\");\n      this.countChange(null);\n    }*/\n  }\n\n  changeEvents() {\n    console.log(\"changeEvents\");\n    this.startDateChange(null, null);   \n    this.endDateChange(null, null);      \n    this.fromChange(null);    \n    this.toChange(null);\n    this.countChange(null);\n    this.tripChange(null);\n  }\n\n  clickChange(objType) {\n    this.click[objType] = false;\n    if(objType == 'start') {\n      this.openStart();\n    } else if(objType == 'end') {\n      this.openEnd();\n    } else if(objType == 'count') {    \n      // has to uncomment after travel popup\n      this.openTravellers();\n    } else if(objType == 'trip') {    \n      this.openTrip();\n    }  \n  }\n\n  openTravellers(){\n    let self = this;\n       setTimeout(\n           ()=>{                \n               self.travellersSelect.open();\n           },\n           50\n       );\n  }\n\n  openTrip(){\n    let self = this;\n       setTimeout(\n           ()=>{                \n               self.tripSelect.open();\n           },\n           50\n       );\n  }\n\n  openStart(){\n    let self = this;\n       setTimeout(\n           ()=>{                \n               self.picker1.open();\n           },\n           50\n       );\n  }\n\n  openEnd(){\n    let self = this;\n       setTimeout(\n           ()=>{                \n               self.picker2.open();\n           },\n           50\n       );\n  }\n\n  startDateChange(type: string, event: MatDatepickerInputEvent<Date>) {\n    if(!this.searchFormGroup.get('start').hasError('required')){\n      this.click.start = true;\n    }\n  }\n\n  endDateChange(type: string, event: MatDatepickerInputEvent<Date>) {   \n    if(!this.searchFormGroup.get('end').hasError('required')\n        && !this.searchFormGroup.hasError('startEndMatch')){\n      this.click.end = true;\n    }\n  }\n\n  fromChange($event) {\n    if(!this.searchFormGroup.get('from').hasError('required')){\n      this.click.from = true;\n    }\n  }\n\n  toChange($event) {\n    if(!this.searchFormGroup.get('to').hasError('required') &&\n      !this.searchFormGroup.get('to').hasError('toFromMatch')){\n      this.click.to = true;\n    }\n  }\n\n  countChange($event) {\n    // has to uncomment after travel popup\n    if(!this.searchFormGroup.get('count').hasError('required')){\n      this.click.count = true;\n    }\n    /*let json = this.searchFormGroup.value;\n    json.count = json.adults + json.childrens + json.infants;\n    this.searchFormGroup.patchValue(json);\n    this.click.count = true;*/\n  }\n\n  tripSelectionChange($event){\n    this.radioSelected = $event;\n    this.radioChange($event);\n  }\n\n  tripChange($event) {\n    if(!this.searchFormGroup.get('trip').hasError('required')){\n      this.click.trip = true;\n    }\n  }\n\n  swipBtn() {\n    let json = this.searchFormGroup.value;\n    const fromValue = json.from;\n    json.from = json.to;\n    json.to = fromValue;\n    this.searchFormGroup.patchValue(json);\n  }\n\n  serachAirportSearchService(railCode) {\n    const code = railCode.data != null ? railCode.data : railCode;\n    return this.railRetrieveService.searchAirport(code)\n            .pipe(map((data: any) => {\n                this.loadingLeavingTo = false;\n                this.loadingLeavingFrom = false;\n                return data.suggestions;\n            }));\n  }\n\n  serachOfflineAirportSearch(railCode) {\n    let suggestions = [];\n    if(this.airPortList.length == 0){\n      const code = railCode.data != null ? railCode.data : railCode;\n      return this.railRetrieveService.searchAirport(code)\n            .pipe(map((data: any) => {\n                this.loadingLeavingTo = false;\n                this.loadingLeavingFrom = false;\n                return data.suggestions;\n            }));\n    } else {\n      this.loadingLeavingTo = false;\n      this.loadingLeavingFrom = false;\n      const filterAirports = this.filterAirport(railCode);\n      return of(filterAirports);\n    }    \n  }\n\n  filterAirport(railCode) {\n    let suggestions = [];\n    let airPortCode = railCode.name || railCode.value;\n    airPortCode = airPortCode == null ? railCode : airPortCode;\n    for(const airPort of this.airPortList) {\n      if( airPort.name.toLowerCase().indexOf(airPortCode.toLowerCase()) === 0\n            || airPort.id.toLowerCase().includes(airPortCode.toLowerCase())) {\n        suggestions.push(airPort);\n      }\n    }\n    return suggestions;\n  }\n\n  getAllAirportSearchService() {\n    this.railRetrieveService.getAllAirport().\n      subscribe((data: any) => {\n        this.airPortList = data;\n        this.isLoading = false;\n      });\n  }\n\n  serachRailsService() {\n      this.railLoading = true;\n      this.railRetrieveService.searchRails(this.getSearchQuery()).\n          subscribe((data: any) => {\n            this.railData = data;\n            this.railLoading = false;\n          });\n  }\n\n  filter(railCode) {\n    if(railCode == '' || railCode == null ){\n      return true;\n    } else if(railCode.data != null){\n      return false;\n    } else if (railCode.length >= 1){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  radioChange(event) {\n    const value = event.value || event;\n    if(value === 'one') {\n      // this.searchFormGroup.get('from').disable();\n      this.searchFormGroup.get('end').disable();\n      this.searchFormGroup.controls['end'].setValue('');\n      this.click.end = true;\n    } else if(value === 'round') {\n      let json = this.searchFormGroup.value;\n      json.trip = 'round';\n      this.searchFormGroup.patchValue(json);\n\n      // this.searchFormGroup.get('from').enable();\n      this.searchFormGroup.get('end').enable();\n      if(this.searchFormGroup.get('end').value == '') {\n        this.searchFormGroup.controls['end'].setValue(this.searchFormGroup.get('start').value);\n      }\n    }\n  }\n  \n  enableRoundTrip() {\n    this.radioSelected = \"round\";\n    this.radioChange(\"round\");\n    this.click.end = false;\n    this.openEnd();\n  }\n\n  toggleTrip() {\n    this.radioSelected = this.radioSelected == \"round\"  ? \"one\" : \"round\";\n    this.radioChange(this.radioSelected);\n  }\n\n  getSearchQuery() {\n    let qry = {\n      Flights:[        \n      ],\n      Passengers:[    \n        {\n          PassengerID: \"T1\"\n        }\n      ]   \n    }\n    const formGroupValue = this.searchFormGroup.value;\n    const toAirPortCode = formGroupValue.to.data || formGroupValue.to.id || formGroupValue.to;\n    const fromAirPortCode = formGroupValue.from.data || formGroupValue.from.id|| formGroupValue.from;\n    qry.Flights.push({\n      \"DepartureAirportCode\": fromAirPortCode,\n      \"ArrivalAirportCode\": toAirPortCode,\n      \"TravelDate\": this.truncateTime(formGroupValue.start)      \n    });\n    if(this.radioSelected == 'round'){\n      qry.Flights.push({ \n        \"DepartureAirportCode\": toAirPortCode,\n        \"ArrivalAirportCode\": fromAirPortCode,\n        \"TravelDate\": this.truncateTime(formGroupValue.end)\n      });\n    }\n    this.query = qry;\n    return qry;\n  }\n\n  truncateTime(time){\n    if(time == null) {\n      time = new Date()\n    } else {\n      time = new Date(time)  \n      var userTimezoneOffset = time.getTimezoneOffset() * 60000;\n      time = new Date(time.getTime() - userTimezoneOffset);\n      // time = new Date(time)  \n    }\n    const timeStr = time.toISOString()\n    return timeStr.substring(0, timeStr.lastIndexOf('T')) + 'T00:00:00';\n  }\n  \n  serach(){\n    if(this.searchFormGroup.valid) {\n      // this.serachRailsService();\n      let searchFormGroupValue = this.searchFormGroup.value;\n      this.localStorage.setItem('searchFormGroup', JSON.stringify(searchFormGroupValue));\n      this.store.dispatch(new SetSearchCriteriaData(searchFormGroupValue));\n      //this.railListComponentRef.searchRail(this.getSearchQuery());\n      this.emitEventToRailList();\n    } else {\n      this.searchFormGroup.markAllAsTouched();\n      this.isSubmitted = true;\n    }\n  }\n}\n","<div *ngIf=\"isLoading\" class=\"spinnerBg\">\n    <mat-spinner class=\"spinner\" [diameter]=\"30\"></mat-spinner>\n</div>\n<div *ngIf=\"!isLoading\"class=\"d-flex flex-column-fluid\">\n    <!--begin::Container-->\n    <div class=\"container\">\n        <!--begin::Dashboard-->\n        <!--begin::Row-->\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"brdSmallBlock bg-white gutter-b\">\n                    <div class=\"brdSmallBlock_inner\">\n                        <div class=\"searchDate\">\n                            <!-- <div class=\"searchContent\">\n                                <span class=\"search_lbl text-dark-50 pb-2\">Trip Type <i\n                                        class=\"fas fa-angle-down text-primary\"></i></span>\n                                <div id=\"trip\" class=\"search_inputField h4\">One Way</div>\n                                <div class=\"form-group lessMtlr d-none\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Place\">\n                                </div>\n                            </div> -->\n                            <div class=\"searchContent\">\n                                <span class=\"search_lbl text-dark-50 pb-2\">Trip Type <i\n                                    class=\"fas fa-angle-down text-primary\"></i></span>\n                                <div (click)=\"clickChange('trip')\" *ngIf=\"click.trip\" id=\"trip\" class=\"search_inputField h4\">{{ searchFormGroup.value.trip | titlecase }} <span>Way</span></div>\n                                <div class=\"lessMtlr\" *ngIf=\"!click.trip\">\n                                  <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                    <!-- <mat-label>Traveller</mat-label> -->\n                                    <mat-select #tripSelect (selectionChange)=\"tripSelectionChange($event.value)\" [formControl]=\"searchFormGroup.get('trip')\">\n                                      <mat-option *ngFor=\"let tripObj of tripType\" [value]=\"tripObj\">\n                                        {{ tripObj | titlecase }} {{ ' Way' }}\n                                      </mat-option>\n                                    </mat-select>\n                                    <mat-error *ngIf=\"isSubmitted && searchFormGroup.get('trip').hasError('required')\">Please Select Trip</mat-error>\n                                  </mat-form-field>\n                                </div>\n                            </div>\n                        </div>\n                        <div #fromDiv id=\"fromCityDiv\" (click)=\"clickChange('from')\" class=\"searchCity\" style=\"width: 21%;\">\n                            <div class=\"searchContent\">\n                                <span class=\"search_lbl text-dark-50 pb-2\">Leaving From</span>\n                                <input (click)=\"clickChange('from')\" *ngIf=\"click.from\" id=\"fromCity\" type=\"text\" class=\"search_inputField h4 text-truncate from\" readonly=\"\" value=\"{{ getAirPortDisplayName(searchFormGroup.value.from) }}\" title=\"{{ getAirPortDisplayName(searchFormGroup.value.from) }}\">\n                                <!-- <div class=\"form-group lessMtlr\">\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"Place\">\n                                </div> -->\n                                <div class=\"lessMtlr\" *ngIf=\"!click.from\">\n                                  <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                    <!-- <mat-label>Leaving From</mat-label> -->\n                                    <input #fromInput type=\"text\" matInput [formControl]=\"searchFormGroup.get('from')\" [matAutocomplete]=\"autoFrom\"\n                                      [errorStateMatcher]=\"errorMatcher\">\n                                    <mat-autocomplete (optionSelected)=\"fromChange($event)\" #autoFrom=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                                      <mat-option *ngFor=\"let option of filteredFromOptions | async\" \n                                          [value]=\"option\">\n                                        {{ (option.value || option.name) + '-' + (option.data || option.id || '') }}\n                                      </mat-option>\n                                    </mat-autocomplete>\n                                  </mat-form-field>\n                                </div>\n                                <mat-error *ngIf=\"isSubmitted && searchFormGroup.get('from').hasError('required')\">\n                                  Leaving From is <strong>required</strong>\n                                </mat-error>  \n                                <mat-error *ngIf=\"isSubmitted && searchFormGroup.hasError('fromSelected')\">Please Select From</mat-error>                         \n                            </div>\n                        </div>\n                        <span class=\"swipBtn\" (click)=\"swipBtn()\">\n                            <i class=\"fas fa-exchange-alt text-primary\"></i>\n                        </span>\n                        <div #toDiv id=\"toCityDiv\" (click)=\"clickChange('to')\" class=\"searchCity\">\n                            <div class=\"searchContent\">\n                                <span class=\"search_lbl text-dark-50 pb-2 to\">Going To</span>\n                                <input (click)=\"clickChange('to')\" *ngIf=\"click.to\" id=\"toCity\" type=\"text\" class=\"search_inputField h4 text-truncate to\" readonly=\"\" value=\"{{ getAirPortDisplayName(searchFormGroup.value.to) }}\" title=\"{{ getAirPortDisplayName(searchFormGroup.value.to) }}\">\n                                <!-- <div class=\"form-group lessMtlr\">\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"Place\">\n                                </div> -->\n                                <div class=\"lessMtlr\" *ngIf=\"!click.to\">\n                                  <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                    <!-- <mat-label>Going To</mat-label> -->\n                                    <input #toInput type=\"text\" matInput [formControl]=\"searchFormGroup.get('to')\" [matAutocomplete]=\"autoTo\"\n                                      [errorStateMatcher]=\"errorMatcher\">\n                                    <mat-autocomplete (optionSelected)=\"toChange($event)\"  #autoTo=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                                      <mat-option *ngFor=\"let option of filteredToOptions | async\" \n                                        [value]=\"option\">\n                                        {{ (option.value || option.name) + '-' + (option.data || option.id || '') }}\n                                      </mat-option>\n                                    </mat-autocomplete>                                    \n                                  </mat-form-field>\n                                </div> \n                                <mat-error *ngIf=\"isSubmitted && searchFormGroup.get('to').hasError('required')\">\n                                  Going To is <strong>required</strong>\n                                </mat-error>\n                                <mat-error *ngIf=\"isSubmitted && searchFormGroup.hasError('toSelected')\">Please Select To</mat-error>\n                                <mat-error *ngIf=\"isSubmitted && searchFormGroup.hasError('toFromMatch')\">To and From are Same</mat-error>\n                            </div>\n                        </div>\n                        <div class=\"searchDate\"(click)=\"clickChange('start')\" >\n                            <div id=\"startDate\" class=\"searchContent\">\n                                <span class=\"search_lbl text-dark-50 pb-2 from\">Depature <i\n                                    class=\"far fa-calendar-alt text-primary\"></i></span>\n                                <div (click)=\"clickChange('start')\" *ngIf=\"click.start\" class=\"search_inputField h4\">\n                                  {{ searchFormGroup.value.start | date: 'dd'}} {{ searchFormGroup.value.start | date: 'MMM'}}  {{ searchFormGroup.value.start | date: 'yyyy'}}\n                                </div>\n                                <!-- <div class=\"form-group lessMtlr\">\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"Place\">\n                                </div> -->\n                                <div class=\"lessMtlr\" *ngIf=\"!click.start\">\n                                  <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                    <!-- <mat-label>Depature</mat-label> -->\n                                    <input matInput [min]=\"minToDate\" [max]=\"maxToDate\" \n                                      (click)=\"picker1.open()\" [errorStateMatcher]=\"errorMatcher\"\n                                      [matDatepicker]=\"picker1\" [formControl]=\"searchFormGroup.get('start')\"\n                                      (dateChange)=\"startDateChange('change', $event)\">\n                                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                                    <mat-datepicker #picker1></mat-datepicker>\n                                  </mat-form-field>\n                                </div>\n                                <mat-error *ngIf=\"isSubmitted && searchFormGroup.get('start').hasError('required')\">\n                                  Depature Date is <strong>required</strong>\n                                </mat-error>\n                            </div>\n                        </div>\n                        <div class=\"searchDate\" (click)=\"enableRoundTrip()\" [ngClass]=\"radioSelected == 'one' ? 'bg-gray-200' : ''\">\n                            <div id=\"endDate\" class=\"searchContent\">\n                                <span class=\"search_lbl text-dark-50 pb-2\">Return <i\n                                    class=\"far fa-calendar-alt text-primary\"></i></span>\n                                <input (click)=\"clickChange('end')\" *ngIf=\"click.end && this.radioSelected == 'one'\" \n                                  type=\"text\" class=\"search_inputField h4 text-dark-50\" \n                                  readonly=\"\" value=\"One Way\">\n                                <div (click)=\"clickChange('end')\" *ngIf=\"click.end && this.radioSelected == 'round'\" \n                                  class=\"search_inputField h4\">\n                                  {{ searchFormGroup.value.end | date: 'dd'}} {{ searchFormGroup.value.end | date: 'MMM'}}  {{ searchFormGroup.value.end | date: 'yyyy'}}\n                                </div>\n                                <!-- <div class=\"form-group lessMtlr\">\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"Place\">\n                                </div> -->\n                                <div class=\"lessMtlr\" *ngIf=\"!click.end\">\n                                  <mat-form-field class=\"w-100\" appearance=\"outline\" (click)=\"enableRoundTrip()\">\n                                    <!-- <mat-label>From</mat-label> -->\n                                    <input matInput [min]=\"minFromDate\" [max]=\"maxFromDate\" \n                                      (click)=\"picker2.open()\" [errorStateMatcher]=\"errorMatcher\"\n                                      [matDatepicker]=\"picker2\" [formControl]=\"searchFormGroup.get('end')\"\n                                      (dateChange)=\"endDateChange('change', $event)\">\n                                    <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                                    <mat-datepicker #picker2></mat-datepicker>\n                                    <!-- <mat-error *ngIf=\"isSubmitted && searchFormGroup.hasError('startEndMatch')\">Return date cannot be earlier than Depature date\n                                    </mat-error> -->\n                                  </mat-form-field>\n                                </div>\n                                <mat-error *ngIf=\"isSubmitted && searchFormGroup.get('end').hasError('required')\">\n                                  Return Date is <strong>required</strong>\n                                </mat-error>\n                                <mat-error *ngIf=\"isSubmitted && searchFormGroup.hasError('startEndMatch')\">Return date cannot be earlier than Depature date\n                                </mat-error>\n                            </div>\n                        </div>\n                        <div class=\"searchDate\">\n                            <div #travellersDiv (click)=\"clickChange('count')\" class=\"searchContent\">\n                                <span class=\"search_lbl text-dark-50 pb-2\">Travellers <i\n                                    class=\"fas fa-angle-down text-primary\"></i></span>\n                                <div *ngIf=\"click.count\" id=\"count\" class=\"search_inputField h4 count\">{{searchFormGroup.value.count}} <span class=\"count\">Traveller</span></div>\n                                <!--Begin Traveller::Count-->\n                                <!-- <div #countPopupDiv *ngIf=\"!click.count\" class=\"card card-custom popoverCustom1 w-auto\">\n                                  <div class=\"card-body p-5\">\n                                    <div class=\"d-flex align-items-center justify-content-between p-4 flex-lg-wrap flex-xl-nowrap\">\n                                      <div class=\"d-flex flex-row\">\n                                        <div class=\"form-group mb-0 mr-3\">\n                                          <label class=\"font-size-h5 mb-0\">Adults</label>\n                                          <p class=\"font-size-sm text-dark-50 mb-1\">&nbsp;</p>\n                                          <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                            <mat-select #travellersSelect [formControl]=\"searchFormGroup.get('adults')\">\n                                              <mat-option *ngFor=\"let number of numbers\" [value]=\"number\">\n                                                {{number}}\n                                              </mat-option>\n                                            </mat-select>\n                                            <mat-error *ngIf=\"isSubmitted && searchFormGroup.get('adults').hasError('required')\">Please choose a number</mat-error>\n                                          </mat-form-field>\n                                        </div>\n                                        <div class=\"form-group mb-0 mr-3\">\n                                          <label class=\"font-size-h5 mb-0\">Childrens</label>\n                                          <p class=\"font-size-sm text-dark-50 mb-1\">Between (2y - 17y)</p>\n                                          <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                            <mat-select #travellersSelect [formControl]=\"searchFormGroup.get('childrens')\">\n                                              <mat-option *ngFor=\"let number of wholeNumbers\" [value]=\"number\">\n                                                {{number}}\n                                              </mat-option>\n                                            </mat-select>\n                                            <mat-error *ngIf=\"isSubmitted && searchFormGroup.get('childrens').hasError('required')\">Please choose a number</mat-error>\n                                          </mat-form-field>\n                                        </div>\n                                        <div class=\"form-group mb-0 mr-3\">\n                                          <label class=\"font-size-h5 mb-0\">Infants</label>\n                                          <p class=\"font-size-sm text-dark-50 mb-1\">Below (2y)</p>\n                                          <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                            <mat-select #travellersSelect [formControl]=\"searchFormGroup.get('infants')\">\n                                              <mat-option *ngFor=\"let number of wholeNumbers\" [value]=\"number\">\n                                                {{number}}\n                                              </mat-option>\n                                            </mat-select>\n                                            <mat-error *ngIf=\"isSubmitted && searchFormGroup.get('infants').hasError('required')\">Please choose a number</mat-error>\n                                          </mat-form-field>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                  <div class=\"card-footer bg-dark-o-40 p-5\">\n                                    <div class=\"d-flex justify-content-end\">\n                                      <button (click)=\"countChange(null)\" type=\"button\" class=\"btn btn-primary btn-pill mr-3\">Apply</button>\n                                    </div>\n                                  </div>\n                                </div> -->\n                                <!--End Traveller::Count-->\n                                <div class=\"lessMtlr\" *ngIf=\"!click.count\">\n                                  <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                    <mat-select #travellersSelect (selectionChange)=\"countChange($event.value)\" [formControl]=\"searchFormGroup.get('count')\">\n                                      <mat-option *ngFor=\"let number of numbers\" [value]=\"number\">\n                                        {{number}}\n                                      </mat-option>\n                                    </mat-select>\n                                  </mat-form-field>\n                                </div>\n                                <mat-error *ngIf=\"isSubmitted && searchFormGroup.get('count').hasError('required')\">Please choose a number</mat-error>\n                            </div>\n                        </div>\n                        <div class=\"bg-primary rounded-top-right rounded-bottom-right\"\n                            style=\"width: 11%;\">\n                            <button type=\"button\" (click)=\"serach()\"\n                                class=\"btn btn-text-white btn-hover-text-white h3 border-0 font-weight-bold pt-6 pl-6 pb-5\">\n                                Search <i class=\"far fa-arrow-alt-circle-right text-white\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!--end::Row-->\n        <!--begin::Row-->\n        <app-rail-list [search]=\"searchSubject.asObservable()\"></app-rail-list>\n        <!--end::Row-->\n        <!--end::Dashboard-->\n    </div>\n    <!--end::Container-->\n</div>"],"sourceRoot":"webpack:///"}